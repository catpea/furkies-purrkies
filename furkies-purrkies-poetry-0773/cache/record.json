{
  "name": "furkies-purrkies-poetry-0773",
  "id": "furkies-purrkies-poetry-0773",
  "title": "Fixing Programming, Or, Building Your First Trillion Dollar Company",
  "date": "2022-04-12T21:18:22.187Z",
  "image": "poetry-0773-illustration.jpg",
  "artwork": "https://unsplash.com/photos/EUsVwEOsblE",
  "audio": "poetry-0773.mp3",
  "html": "<div class=\"section\">\n  <p>There are low level languages,<br>and high level languages.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>In a low level language,<br>you talk to a hard drive in a way that hard drives like to be talked to.</p>\n  <p>In a high level language,<br>you open a Desktop Window with a simple bit of code.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>High level languages have a concept of objects,<br>that is really fun to write out and play with.</p>\n  <p>People create window objects with actions like,<br>open or close.</p>\n  <p>When you tell a window to open, with title more than two words,<br>it pops up.</p>\n  <p>You can point it at a web page,<br>or put some input boxes and a button in there, to have the user say something.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Sometimes objects are used to create,<br>more powerful objects.</p>\n  <p>Orbs connected by wires,<br>or actions that have a concept of before and after where you can add more actions.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>And this is where the party flops,<br>any programmers that venture beyond this point unravel.</p>\n  <p>They may make some games,<br>maybe card decks with user interfaces, maybe virtual worlds.</p>\n  <p>But it all falls apart here,<br>people don't do anything beyond this point.</p>\n  <p>And if they try they end up with what has been refereed to as,<br>leaky abstractions.</p>\n  <p>Where you use windows,<br>but they can't be opened, or something equally mangled.</p>\n  <p>There are also folks here,<br>who have been taught to map out low level stuff with objects.</p>\n  <p>They create objects like Hard drive,<br>or file, or file with a documents property that explains where the documents folder is.</p>\n  <p>They just code themselves in a circle,<br>they use high level tools for creating concepts of low level things.</p>\n  <p>Things that are already done,<br>and they create an unreadable mess of non-sense.</p>\n  <p>Programming,<br>for programming's sake.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Practical Applications of Object Oriented Programming,<br>are discovered by Poets and Artist, not Engineers.</p>\n  <p>And there is a point there,<br>where you call the program done.</p>\n  <p>And let the users do all the programming,<br>because there is only a few engineers and a million users.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>So this is a Higher Level Programming Language,<br>where you don't have to worry about low level stuff.</p>\n  <p>In fact if you need a special bit of functionality,<br>that needs to be filled with standard programming.</p>\n  <p>You describe what you need,<br>with Behavior Driven Development language, which is pretty English.</p>\n  <p>And wait until that functionality,<br>becomes a puzzle or more precisely a robot, that you and other users can use in the programs.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>The programs that you may wish to build,<br>are the same or similar to what leading internet companies are doing.</p>\n  <p>Except you are making them with a high level language,<br>where it is trivial, and clear.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>The first problem you have to tackle,<br>is your monthly server bills, and this is cheap and easy.</p>\n  <p>When a user signs up for a developer account with your company,<br>they have to bring in their own server.</p>\n  <p>The server will have a standard spreadsheet like database,<br>and whatever pieces of the puzzle they use.</p>\n  <p>If the server is cheap,<br>and they have a sudden spike in traffic.</p>\n  <p>Then it is their responsibility,<br>to turn on a second one.</p>\n  <p>Which will jump into processing the queue of actions,<br>that are taking to long to be solved by one server.</p>\n  <p>It is better to launch a couple just in case,<br>and as the traffic dies down, they will shut down, having been up for hours it is not expensive.</p>\n  <p>You are welcome to offer a premium service,<br>but I like application creators to accept responsibilities.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>With your network being ever expanded by users,<br>lets talk about the Higher Level Language.</p>\n  <p>If you happen to be a software Engineer,<br>you might want to stop listening now, cause this will mess you up.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>We have to start with Beauty, Class, and Tradition,<br>so the user interface is a work of art like no other.</p>\n  <p>It is beautified by users, and your first user interface theme,<br>is nothing less fascinating Pixel Art, with a heavy undertone of Retro Futurism.</p>\n  <p>It will look like a computer game,<br>or more precisely, like a utility program from the old days of Commodore and Amiga.</p>\n  <p>Investing into Beauty and Art, is important,<br>your users will actually understand everything you are doping....</p>\n  <p>By just looking at the screenshot,<br>in fact, the screenshot will not only haunt them....</p>\n  <p>But they will return to your system,<br>with a back of the envelope sketch of a custom program they always wanted to use.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Now that we have the servers. or more precisely,<br>distributed self provisioning server architecture taken care of.</p>\n  <p>Now, that we have the beautiful user interface,<br>that users are always welcome to improve with more breathtaking pixel art.</p>\n  <p>Let us look at the language it self,<br>it is of course very simple, friendly, and requires no learning.</p>\n  <p>That is the true definition,<br>of a higher level programming language.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>It is a world of rooms that have doors to other rooms,<br>this not only allows to categorize things in a user friendly way, similar to files, folders, windows and desktops.</p>\n  <p>But also allows for creation of simple to reason about,<br>processes or, state machines.</p>\n  <p>And that is accomplished with the concept of a package,<br>or a box that contains things in it.</p>\n  <p>It can for example contain a picture,<br>that a user may want to convert into a painting.</p>\n  <p>This package is addressed to an artist,<br>then you will be notified when it is looked at, approved, queued, and when the progress of the task changes.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>The most important object is the user,<br>and here the users can move around the system, interact, create forums - or write on the wall if you like.</p>\n  <p>And users have inventories,<br>they have a key to their own private areas, and whatever administrative rooms they built up as part of creating their inventions.</p>\n  <p>They have a passport with memberships to private communities,<br>and coins, that can be spent on purchases, and purchased, of course.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Similar to a user,<br>is the bot.</p>\n  <p>Bots help with tasks such as creation of a specific package,<br>or designing a new package from scratch for some new purpose.</p>\n  <p>But these bots, are extremely powerful,<br>they can write poetry, create computer programs, and even analyze x-rays.</p>\n  <p>Because a bot can be powered by a group of users,<br>in the case of x-rays, a group of doctors from around the world.</p>\n  <p>And it should be customary,<br>that before a human based action taken a consensus must be reached, and then further verified by more human participants.</p>\n  <p>This is very similar to a Jury Room,<br>or how self checkout registers (which are robots) use humans to solve problems that they can't deal with.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Finally, you need a way to automate things,<br>and you should start simple and easy at first.</p>\n  <p>You create a factory out of rooms,<br>that accepts certain kinds of packages.</p>\n  <p>That are then processed by bots,<br>sent to another room, and processed by more bots.</p>\n  <p>Your factory does not need to be liner,<br>it can be a tree, based on some condition in the package, it can be sent to a different room, to a different group of bots.</p>\n  <p>The packages that enter a room are put in a queue,<br>and I recommend you use the concept of an assembly line.</p>\n  <p>The bots are attached to it in a sequence,<br>this will help you group small tasks without the need for networks of rooms.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>And that's, it,<br><a href=\"https://en.wikipedia.org/wiki/MOO\">it is a virtual world similar to a MOO</a> that everybody already understands.</p>\n  <p>There are no leaky abstractions here,<br>just a handful of easy to grasp things.</p>\n  <p>To start, put a bounty out,<br>for the most delightful implementation of this system.</p>\n  <p>Emphasize small but clear to read code base,<br>source lines of code wise, this is not a large program.</p>\n</div>",
  "bootstrap": "<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">There are low level languages,<br>and high level languages.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">In a low level language,<br>you talk to a hard drive in a way that hard drives like to be talked to.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">In a high level language,<br>you open a Desktop Window with a simple bit of code.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">High level languages have a concept of objects,<br>that is really fun to write out and play with.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">People create window objects with actions like,<br>open or close.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">When you tell a window to open, with title more than two words,<br>it pops up.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You can point it at a web page,<br>or put some input boxes and a button in there, to have the user say something.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Sometimes objects are used to create,<br>more powerful objects.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Orbs connected by wires,<br>or actions that have a concept of before and after where you can add more actions.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And this is where the party flops,<br>any programmers that venture beyond this point unravel.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">They may make some games,<br>maybe card decks with user interfaces, maybe virtual worlds.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But it all falls apart here,<br>people don't do anything beyond this point.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And if they try they end up with what has been refereed to as,<br>leaky abstractions.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Where you use windows,<br>but they can't be opened, or something equally mangled.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">There are also folks here,<br>who have been taught to map out low level stuff with objects.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">They create objects like Hard drive,<br>or file, or file with a documents property that explains where the documents folder is.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">They just code themselves in a circle,<br>they use high level tools for creating concepts of low level things.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Things that are already done,<br>and they create an unreadable mess of non-sense.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Programming,<br>for programming's sake.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Practical Applications of Object Oriented Programming,<br>are discovered by Poets and Artist, not Engineers.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And there is a point there,<br>where you call the program done.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And let the users do all the programming,<br>because there is only a few engineers and a million users.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">So this is a Higher Level Programming Language,<br>where you don't have to worry about low level stuff.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">In fact if you need a special bit of functionality,<br>that needs to be filled with standard programming.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You describe what you need,<br>with Behavior Driven Development language, which is pretty English.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And wait until that functionality,<br>becomes a puzzle or more precisely a robot, that you and other users can use in the programs.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The programs that you may wish to build,<br>are the same or similar to what leading internet companies are doing.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Except you are making them with a high level language,<br>where it is trivial, and clear.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The first problem you have to tackle,<br>is your monthly server bills, and this is cheap and easy.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">When a user signs up for a developer account with your company,<br>they have to bring in their own server.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The server will have a standard spreadsheet like database,<br>and whatever pieces of the puzzle they use.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If the server is cheap,<br>and they have a sudden spike in traffic.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Then it is their responsibility,<br>to turn on a second one.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Which will jump into processing the queue of actions,<br>that are taking to long to be solved by one server.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is better to launch a couple just in case,<br>and as the traffic dies down, they will shut down, having been up for hours it is not expensive.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You are welcome to offer a premium service,<br>but I like application creators to accept responsibilities.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">With your network being ever expanded by users,<br>lets talk about the Higher Level Language.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If you happen to be a software Engineer,<br>you might want to stop listening now, cause this will mess you up.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">We have to start with Beauty, Class, and Tradition,<br>so the user interface is a work of art like no other.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is beautified by users, and your first user interface theme,<br>is nothing less fascinating Pixel Art, with a heavy undertone of Retro Futurism.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It will look like a computer game,<br>or more precisely, like a utility program from the old days of Commodore and Amiga.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Investing into Beauty and Art, is important,<br>your users will actually understand everything you are doping....</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">By just looking at the screenshot,<br>in fact, the screenshot will not only haunt them....</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But they will return to your system,<br>with a back of the envelope sketch of a custom program they always wanted to use.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Now that we have the servers. or more precisely,<br>distributed self provisioning server architecture taken care of.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Now, that we have the beautiful user interface,<br>that users are always welcome to improve with more breathtaking pixel art.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Let us look at the language it self,<br>it is of course very simple, friendly, and requires no learning.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">That is the true definition,<br>of a higher level programming language.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is a world of rooms that have doors to other rooms,<br>this not only allows to categorize things in a user friendly way, similar to files, folders, windows and desktops.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But also allows for creation of simple to reason about,<br>processes or, state machines.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And that is accomplished with the concept of a package,<br>or a box that contains things in it.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It can for example contain a picture,<br>that a user may want to convert into a painting.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This package is addressed to an artist,<br>then you will be notified when it is looked at, approved, queued, and when the progress of the task changes.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The most important object is the user,<br>and here the users can move around the system, interact, create forums - or write on the wall if you like.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And users have inventories,<br>they have a key to their own private areas, and whatever administrative rooms they built up as part of creating their inventions.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">They have a passport with memberships to private communities,<br>and coins, that can be spent on purchases, and purchased, of course.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Similar to a user,<br>is the bot.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Bots help with tasks such as creation of a specific package,<br>or designing a new package from scratch for some new purpose.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But these bots, are extremely powerful,<br>they can write poetry, create computer programs, and even analyze x-rays.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Because a bot can be powered by a group of users,<br>in the case of x-rays, a group of doctors from around the world.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And it should be customary,<br>that before a human based action taken a consensus must be reached, and then further verified by more human participants.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This is very similar to a Jury Room,<br>or how self checkout registers (which are robots) use humans to solve problems that they can't deal with.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Finally, you need a way to automate things,<br>and you should start simple and easy at first.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You create a factory out of rooms,<br>that accepts certain kinds of packages.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">That are then processed by bots,<br>sent to another room, and processed by more bots.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Your factory does not need to be liner,<br>it can be a tree, based on some condition in the package, it can be sent to a different room, to a different group of bots.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The packages that enter a room are put in a queue,<br>and I recommend you use the concept of an assembly line.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The bots are attached to it in a sequence,<br>this will help you group small tasks without the need for networks of rooms.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And that's, it,<br><a href=\"https://en.wikipedia.org/wiki/MOO\">it is a virtual world similar to a MOO</a> that everybody already understands.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">There are no leaky abstractions here,<br>just a handful of easy to grasp things.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">To start, put a bounty out,<br>for the most delightful implementation of this system.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Emphasize small but clear to read code base,<br>source lines of code wise, this is not a large program.</div>\n  </div>\n</div>",
  "print": "<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">There are low level languages,<br>and high level languages.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">In a low level language,<br>you talk to a hard drive in a way that hard drives like to be talked to.</div>\n  <div class=\"paragraph\">In a high level language,<br>you open a Desktop Window with a simple bit of code.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">High level languages have a concept of objects,<br>that is really fun to write out and play with.</div>\n  <div class=\"paragraph\">People create window objects with actions like,<br>open or close.</div>\n  <div class=\"paragraph\">When you tell a window to open, with title more than two words,<br>it pops up.</div>\n  <div class=\"paragraph\">You can point it at a web page,<br>or put some input boxes and a button in there, to have the user say something.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Sometimes objects are used to create,<br>more powerful objects.</div>\n  <div class=\"paragraph\">Orbs connected by wires,<br>or actions that have a concept of before and after where you can add more actions.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">And this is where the party flops,<br>any programmers that venture beyond this point unravel.</div>\n  <div class=\"paragraph\">They may make some games,<br>maybe card decks with user interfaces, maybe virtual worlds.</div>\n  <div class=\"paragraph\">But it all falls apart here,<br>people don't do anything beyond this point.</div>\n  <div class=\"paragraph\">And if they try they end up with what has been refereed to as,<br>leaky abstractions.</div>\n  <div class=\"paragraph\">Where you use windows,<br>but they can't be opened, or something equally mangled.</div>\n  <div class=\"paragraph\">There are also folks here,<br>who have been taught to map out low level stuff with objects.</div>\n  <div class=\"paragraph\">They create objects like Hard drive,<br>or file, or file with a documents property that explains where the documents folder is.</div>\n  <div class=\"paragraph\">They just code themselves in a circle,<br>they use high level tools for creating concepts of low level things.</div>\n  <div class=\"paragraph\">Things that are already done,<br>and they create an unreadable mess of non-sense.</div>\n  <div class=\"paragraph\">Programming,<br>for programming's sake.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Practical Applications of Object Oriented Programming,<br>are discovered by Poets and Artist, not Engineers.</div>\n  <div class=\"paragraph\">And there is a point there,<br>where you call the program done.</div>\n  <div class=\"paragraph\">And let the users do all the programming,<br>because there is only a few engineers and a million users.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">So this is a Higher Level Programming Language,<br>where you don't have to worry about low level stuff.</div>\n  <div class=\"paragraph\">In fact if you need a special bit of functionality,<br>that needs to be filled with standard programming.</div>\n  <div class=\"paragraph\">You describe what you need,<br>with Behavior Driven Development language, which is pretty English.</div>\n  <div class=\"paragraph\">And wait until that functionality,<br>becomes a puzzle or more precisely a robot, that you and other users can use in the programs.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">The programs that you may wish to build,<br>are the same or similar to what leading internet companies are doing.</div>\n  <div class=\"paragraph\">Except you are making them with a high level language,<br>where it is trivial, and clear.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">The first problem you have to tackle,<br>is your monthly server bills, and this is cheap and easy.</div>\n  <div class=\"paragraph\">When a user signs up for a developer account with your company,<br>they have to bring in their own server.</div>\n  <div class=\"paragraph\">The server will have a standard spreadsheet like database,<br>and whatever pieces of the puzzle they use.</div>\n  <div class=\"paragraph\">If the server is cheap,<br>and they have a sudden spike in traffic.</div>\n  <div class=\"paragraph\">Then it is their responsibility,<br>to turn on a second one.</div>\n  <div class=\"paragraph\">Which will jump into processing the queue of actions,<br>that are taking to long to be solved by one server.</div>\n  <div class=\"paragraph\">It is better to launch a couple just in case,<br>and as the traffic dies down, they will shut down, having been up for hours it is not expensive.</div>\n  <div class=\"paragraph\">You are welcome to offer a premium service,<br>but I like application creators to accept responsibilities.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">With your network being ever expanded by users,<br>lets talk about the Higher Level Language.</div>\n  <div class=\"paragraph\">If you happen to be a software Engineer,<br>you might want to stop listening now, cause this will mess you up.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">We have to start with Beauty, Class, and Tradition,<br>so the user interface is a work of art like no other.</div>\n  <div class=\"paragraph\">It is beautified by users, and your first user interface theme,<br>is nothing less fascinating Pixel Art, with a heavy undertone of Retro Futurism.</div>\n  <div class=\"paragraph\">It will look like a computer game,<br>or more precisely, like a utility program from the old days of Commodore and Amiga.</div>\n  <div class=\"paragraph\">Investing into Beauty and Art, is important,<br>your users will actually understand everything you are doping....</div>\n  <div class=\"paragraph\">By just looking at the screenshot,<br>in fact, the screenshot will not only haunt them....</div>\n  <div class=\"paragraph\">But they will return to your system,<br>with a back of the envelope sketch of a custom program they always wanted to use.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Now that we have the servers. or more precisely,<br>distributed self provisioning server architecture taken care of.</div>\n  <div class=\"paragraph\">Now, that we have the beautiful user interface,<br>that users are always welcome to improve with more breathtaking pixel art.</div>\n  <div class=\"paragraph\">Let us look at the language it self,<br>it is of course very simple, friendly, and requires no learning.</div>\n  <div class=\"paragraph\">That is the true definition,<br>of a higher level programming language.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">It is a world of rooms that have doors to other rooms,<br>this not only allows to categorize things in a user friendly way, similar to files, folders, windows and desktops.</div>\n  <div class=\"paragraph\">But also allows for creation of simple to reason about,<br>processes or, state machines.</div>\n  <div class=\"paragraph\">And that is accomplished with the concept of a package,<br>or a box that contains things in it.</div>\n  <div class=\"paragraph\">It can for example contain a picture,<br>that a user may want to convert into a painting.</div>\n  <div class=\"paragraph\">This package is addressed to an artist,<br>then you will be notified when it is looked at, approved, queued, and when the progress of the task changes.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">The most important object is the user,<br>and here the users can move around the system, interact, create forums - or write on the wall if you like.</div>\n  <div class=\"paragraph\">And users have inventories,<br>they have a key to their own private areas, and whatever administrative rooms they built up as part of creating their inventions.</div>\n  <div class=\"paragraph\">They have a passport with memberships to private communities,<br>and coins, that can be spent on purchases, and purchased, of course.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Similar to a user,<br>is the bot.</div>\n  <div class=\"paragraph\">Bots help with tasks such as creation of a specific package,<br>or designing a new package from scratch for some new purpose.</div>\n  <div class=\"paragraph\">But these bots, are extremely powerful,<br>they can write poetry, create computer programs, and even analyze x-rays.</div>\n  <div class=\"paragraph\">Because a bot can be powered by a group of users,<br>in the case of x-rays, a group of doctors from around the world.</div>\n  <div class=\"paragraph\">And it should be customary,<br>that before a human based action taken a consensus must be reached, and then further verified by more human participants.</div>\n  <div class=\"paragraph\">This is very similar to a Jury Room,<br>or how self checkout registers (which are robots) use humans to solve problems that they can't deal with.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Finally, you need a way to automate things,<br>and you should start simple and easy at first.</div>\n  <div class=\"paragraph\">You create a factory out of rooms,<br>that accepts certain kinds of packages.</div>\n  <div class=\"paragraph\">That are then processed by bots,<br>sent to another room, and processed by more bots.</div>\n  <div class=\"paragraph\">Your factory does not need to be liner,<br>it can be a tree, based on some condition in the package, it can be sent to a different room, to a different group of bots.</div>\n  <div class=\"paragraph\">The packages that enter a room are put in a queue,<br>and I recommend you use the concept of an assembly line.</div>\n  <div class=\"paragraph\">The bots are attached to it in a sequence,<br>this will help you group small tasks without the need for networks of rooms.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">And that's, it,<br><span>it is a virtual world similar to a MOO<sup>[1]</sup></span> that everybody already understands.</div>\n  <div class=\"paragraph\">There are no leaky abstractions here,<br>just a handful of easy to grasp things.</div>\n  <div class=\"paragraph\">To start, put a bounty out,<br>for the most delightful implementation of this system.</div>\n  <div class=\"paragraph\">Emphasize small but clear to read code base,<br>source lines of code wise, this is not a large program.</div>\n</div>\n<div class=\"break-after\">&nbsp;</div>\n<div>\n  <div class=\"section\" style=\"padding-bottom: 1rem;\">References</div>\n  <div>[1]: https://en.wikipedia.org/wiki/MOO</div>\n</div>",
  "text": "There are low level languages,\nand high level languages.\n\nIn a low level language,\nyou talk to a hard drive in a way that hard drives like to be talked to.\nIn a high level language,\nyou open a Desktop Window with a simple bit of code.\n\nHigh level languages have a concept of objects,\nthat is really fun to write out and play with.\nPeople create window objects with actions like,\nopen or close.\nWhen you tell a window to open, with title more than two words,\nit pops up.\nYou can point it at a web page,\nor put some input boxes and a button in there, to have the user say something.\n\nSometimes objects are used to create,\nmore powerful objects.\nOrbs connected by wires,\nor actions that have a concept of before and after where you can add more actions.\n\nAnd this is where the party flops,\nany programmers that venture beyond this point unravel.\nThey may make some games,\nmaybe card decks with user interfaces, maybe virtual worlds.\nBut it all falls apart here,\npeople don't do anything beyond this point.\nAnd if they try they end up with what has been refereed to as,\nleaky abstractions.\nWhere you use windows,\nbut they can't be opened, or something equally mangled.\nThere are also folks here,\nwho have been taught to map out low level stuff with objects.\nThey create objects like Hard drive,\nor file, or file with a documents property that explains where the documents folder is.\nThey just code themselves in a circle,\nthey use high level tools for creating concepts of low level things.\nThings that are already done,\nand they create an unreadable mess of non-sense.\nProgramming,\nfor programming's sake.\n\nPractical Applications of Object Oriented Programming,\nare discovered by Poets and Artist, not Engineers.\nAnd there is a point there,\nwhere you call the program done.\nAnd let the users do all the programming,\nbecause there is only a few engineers and a million users.\n\nSo this is a Higher Level Programming Language,\nwhere you don't have to worry about low level stuff.\nIn fact if you need a special bit of functionality,\nthat needs to be filled with standard programming.\nYou describe what you need,\nwith Behavior Driven Development language, which is pretty English.\nAnd wait until that functionality,\nbecomes a puzzle or more precisely a robot, that you and other users can use in the programs.\n\nThe programs that you may wish to build,\nare the same or similar to what leading internet companies are doing.\nExcept you are making them with a high level language,\nwhere it is trivial, and clear.\n\nThe first problem you have to tackle,\nis your monthly server bills, and this is cheap and easy.\nWhen a user signs up for a developer account with your company,\nthey have to bring in their own server.\nThe server will have a standard spreadsheet like database,\nand whatever pieces of the puzzle they use.\nIf the server is cheap,\nand they have a sudden spike in traffic.\nThen it is their responsibility,\nto turn on a second one.\nWhich will jump into processing the queue of actions,\nthat are taking to long to be solved by one server.\nIt is better to launch a couple just in case,\nand as the traffic dies down, they will shut down, having been up for hours it is not expensive.\nYou are welcome to offer a premium service,\nbut I like application creators to accept responsibilities.\n\nWith your network being ever expanded by users,\nlets talk about the Higher Level Language.\nIf you happen to be a software Engineer,\nyou might want to stop listening now, cause this will mess you up.\n\nWe have to start with Beauty, Class, and Tradition,\nso the user interface is a work of art like no other.\nIt is beautified by users, and your first user interface theme,\nis nothing less fascinating Pixel Art, with a heavy undertone of Retro Futurism.\nIt will look like a computer game,\nor more precisely, like a utility program from the old days of Commodore and Amiga.\nInvesting into Beauty and Art, is important,\nyour users will actually understand everything you are doping....\nBy just looking at the screenshot,\nin fact, the screenshot will not only haunt them....\nBut they will return to your system,\nwith a back of the envelope sketch of a custom program they always wanted to use.\n\nNow that we have the servers. or more precisely,\ndistributed self provisioning server architecture taken care of.\nNow, that we have the beautiful user interface,\nthat users are always welcome to improve with more breathtaking pixel art.\nLet us look at the language it self,\nit is of course very simple, friendly, and requires no learning.\nThat is the true definition,\nof a higher level programming language.\n\nIt is a world of rooms that have doors to other rooms,\nthis not only allows to categorize things in a user friendly way, similar to files, folders, windows and desktops.\nBut also allows for creation of simple to reason about,\nprocesses or, state machines.\nAnd that is accomplished with the concept of a package,\nor a box that contains things in it.\nIt can for example contain a picture,\nthat a user may want to convert into a painting.\nThis package is addressed to an artist,\nthen you will be notified when it is looked at, approved, queued, and when the progress of the task changes.\n\nThe most important object is the user,\nand here the users can move around the system, interact, create forums - or write on the wall if you like.\nAnd users have inventories,\nthey have a key to their own private areas, and whatever administrative rooms they built up as part of creating their inventions.\nThey have a passport with memberships to private communities,\nand coins, that can be spent on purchases, and purchased, of course.\n\nSimilar to a user,\nis the bot.\nBots help with tasks such as creation of a specific package,\nor designing a new package from scratch for some new purpose.\nBut these bots, are extremely powerful,\nthey can write poetry, create computer programs, and even analyze x-rays.\nBecause a bot can be powered by a group of users,\nin the case of x-rays, a group of doctors from around the world.\nAnd it should be customary,\nthat before a human based action taken a consensus must be reached, and then further verified by more human participants.\nThis is very similar to a Jury Room,\nor how self checkout registers (which are robots) use humans to solve problems that they can't deal with.\n\nFinally, you need a way to automate things,\nand you should start simple and easy at first.\nYou create a factory out of rooms,\nthat accepts certain kinds of packages.\nThat are then processed by bots,\nsent to another room, and processed by more bots.\nYour factory does not need to be liner,\nit can be a tree, based on some condition in the package, it can be sent to a different room, to a different group of bots.\nThe packages that enter a room are put in a queue,\nand I recommend you use the concept of an assembly line.\nThe bots are attached to it in a sequence,\nthis will help you group small tasks without the need for networks of rooms.\n\nAnd that's, it,\nit is a virtual world similar to a MOO[1] that everybody already understands.\nThere are no leaky abstractions here,\njust a handful of easy to grasp things.\nTo start, put a bounty out,\nfor the most delightful implementation of this system.\nEmphasize small but clear to read code base,\nsource lines of code wise, this is not a large program.\n \nReferences\n[1]: https://en.wikipedia.org/wiki/MOO",
  "images": [],
  "links": [
    {
      "title": "it is a virtual world similar to a MOO",
      "url": "https://en.wikipedia.org/wiki/MOO",
      "hostname": "en.wikipedia.org"
    }
  ]
}