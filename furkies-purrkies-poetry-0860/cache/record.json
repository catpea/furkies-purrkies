{
  "name": "furkies-purrkies-poetry-0860",
  "id": "furkies-purrkies-poetry-0860",
  "title": "What Is In A Programming Language Anyway?",
  "date": "2022-07-08T19:43:19.171Z",
  "image": "poetry-0860-illustration.jpg",
  "artwork": "https://unsplash.com/photos/AS80CJTzM5Q",
  "audio": "poetry-0860.mp3",
  "guid": "24df42fc-fd9a-47ac-9785-82238462cddc",
  "html": "<div class=\"section\">\n  <p><a href=\"https://www.youtube.com/watch?v=J0y6XXdm4KI\">Variables</a>, <a href=\"https://www.youtube.com/watch?v=bOkuPo5VbTg\">functions</a>, <a href=\"https://www.youtube.com/watch?v=IsG4Xd6LlsM\">if statements</a>, <a href=\"https://www.youtube.com/watch?v=6Hb0qZ3PVWI\">loops</a>,<br>and <a href=\"https://www.youtube.com/watch?v=X0ipw1k7ygU\">objects</a> to group variables and functions together into a structure that makes sense to you.</p>\n  <p>For example, my if(app.user.loggedIn()){app.navigation.signOutButton.visible = true}</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>So computer programming,<br>is super simple.</p>\n  <p>If you stick to one programming language,<br>like latest modern JavaScript it is even simpler.</p>\n  <p>Programming is just about variables that you define,<br>which hold things that yo use, like serverAddress = “example.com”;</p>\n  <p>If statements that you use on your variables,<br>like if user.loggedIn then redirect(‘/home’);</p>\n  <p>functions that you call,<br>which most often return variables.</p>\n  <p>You usually create a lot of function for yourself,<br>and they represent the shape of the program you are writing.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>If you are building a virtual world or a <a href=\"https://en.wikipedia.org/wiki/MUD\">MUD</a>,<br>then you will have a function that says player.go(‘north’);</p>\n  <p>Or better yet, room.connect(‘north’, universe.createRoom(‘Bathroom’));</p>\n  <p>Many of the tiny functions come from your operating system,<br>so like open(‘letter.txt’) is something that the programming language creators let you have.</p>\n  <p>It is a wrapper function, for the operating system’s,<br>open file call.</p>\n  <p>The programming language it self will bring in a lot of functions,<br>one of the coolest and most forbidden functions in JavaScript is eval().</p>\n  <p>It is often said that it is evil,<br>so I am not going to tell you about it.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Some variables are actually groups of variables,<br>groups are a big deal in programming.</p>\n  <p>You can use a group variable to store,<br>a bunch of urls that you then download and convert to plain text.</p>\n  <p>This way you can simplify your news,<br>and just get the plain text version.</p>\n  <p>If statements have a sister, that comes in useful here,<br>and that is the loop.</p>\n  <p>Here you can say, I will loop over my list of urls,<br>and call some functions like downloadUrl(), and then convertToText().</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Functions can also be grouped,<br>and that is where you hear this “dot” a lot.</p>\n  <p>It does not make sense to put functions in a sequence,<br>like a list of news adresses for download...</p>\n  <p>So you throw them in a bag,<br>like a generic group.</p>\n  <p>The word bag is something I just use here,<br>to show you that it is just this generic thing.</p>\n  <p>And this would just be another variable,<br>in your program.</p>\n  <p>The correct name for bag or generic group,<br>is object.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Things get pretty fuzzy here,<br>because why stop at putting functions in a bag...</p>\n  <p>Why not say:<br>user.name = “Alice”;</p>\n  <p>The dot actually comes from the world of<br>Object Oriented Programming.</p>\n  <p>In JavaScript you can have a ban like object,<br>where you don’t have to define it first or create a new instance of.</p>\n  <p>But that is just the short hand notation,<br>for the underlying object.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>And you would want to use it so that you can have two variables names user1 and user2,<br>and user1 can be alice, and user2 can be bob - without overriding anything.</p>\n  <p>A more realistic example is where,<br>you have a list of users like in a spreadsheet, which is what a database is.</p>\n  <p>In a spreadsheet your data automatically updates,<br>in a database, you create lots and lots of sheets and then join some of them when needed.</p>\n  <p>Here rather than thinking sheets,<br>you think in rows of data, where each row represents a user.</p>\n  <p>Often people go extra step,<br>and setup a useful user object for each row.</p>\n  <p>You can have a databaseRows.find(‘username’, ‘alice’);<br>which then returns a user object that would have some useful functions.</p>\n  <p>So databaseRows, for more often database.query(),<br>fills the user object out for you.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>If you were programming a MUD, or a virtual world,<br>you would define an object named room.</p>\n  <p>And then dream up what your room objects should be about,<br>do you want your rooms to have a .go() function which moves the player through some door.</p>\n  <p>Or do you want your user to have a user.go() function,<br>what sounds better for you?</p>\n  <p>What if you want to move a chair,<br>do you want to write a go function for a chair.</p>\n  <p>Or move function for the room,<br>or an inventory bag or object, that you attach to the user.</p>\n  <p>Where they can put their chair in their inventory,<br>then say player.go(‘living room’), and player.inventory.drop(‘chair’)?</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Building out Objects with functions,<br>can be like building a universe.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>So objects and lists, are like a higher level grouping mechanism,<br>for variables and functions.</p>\n  <p>Where functions can call other functions,<br>often based on if statements testing some variable,</p>\n  <p>And if you do have a list then you use a loop,<br>to apply some function to each of the items in the list.</p>\n  <p>And often in that function you have lots of if statements,<br>and call other functions, maybe do some more looping.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>There is this funny thing where people call HTML a programming language,<br>technically it isn’t, but those people don’t usually understand why.</p>\n  <p>So HTML has these nested tags, and each tag can have attributes,<br>and in most cases you close the tag.</p>\n  <p>So all this actually represents a hierarchy of objects,<br>all the tags have corresponding object, and tag attributes are applied to those objects.</p>\n  <p>You could create a tag named user,<br>with attributes name and email.</p>\n  <p>But the reason why HTML is not a programming language,<br>is that it is used to create a deeply nested hierarchy of variables.</p>\n  <p>It is just like the variable creation part of a language,<br>converting tags to objects my be sometimes called hydration.</p>\n  <p>Because tags in their text form,<br>are like this dehydrated object hierarchy.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Inventions like <a href=\"https://svelte.dev/\">svelte</a> mix logic and loops with HTML,<br>so svelte’s markup is almost almost a language.</p>\n  <p>It is a <a href=\"https://www.youtube.com/watch?v=4HuAnM6b2d8\">templating language</a>, because templating HTML,<br>is not really thought of as programming, templating often does not understand tags and sees text instead.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>If you are going to learn a language learn JavaScript,<br>because it helps you program windowed applications with electron, on the server with node.js, and in the browser alongside HTML and SVG.</p>\n  <p>HTML allows you to include a code editor in your program,<br>and SVG and canvas allow you to manipulate graphics, including <a href=\"https://threejs.org/\">3D graphics</a>.</p>\n  <p>To pull in all those technologies together in C, Java, or Python, or PHP,<br>may not only represent a lot of work, but outdated or old libraries.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>As to whether or not you should consider learning programming,<br>knowing programming is like having a smartphone, it is the new standard.</p>\n  <p>All the young people will eventually know it,<br>but the previous generations still can be <a href=\"https://www.youtube.com/watch?v=lFdnQlA4ucM\">Hip Hop!</a>, without the damn thing.</p>\n</div>",
  "bootstrap": "<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\"><a href=\"https://www.youtube.com/watch?v=J0y6XXdm4KI\">Variables</a>, <a href=\"https://www.youtube.com/watch?v=bOkuPo5VbTg\">functions</a>, <a href=\"https://www.youtube.com/watch?v=IsG4Xd6LlsM\">if statements</a>, <a href=\"https://www.youtube.com/watch?v=6Hb0qZ3PVWI\">loops</a>,<br>and <a href=\"https://www.youtube.com/watch?v=X0ipw1k7ygU\">objects</a> to group variables and functions together into a structure that makes sense to you.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">For example, my if(app.user.loggedIn()){app.navigation.signOutButton.visible = true}</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">So computer programming,<br>is super simple.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If you stick to one programming language,<br>like latest modern JavaScript it is even simpler.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Programming is just about variables that you define,<br>which hold things that yo use, like serverAddress = “example.com”;</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If statements that you use on your variables,<br>like if user.loggedIn then redirect(‘/home’);</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">functions that you call,<br>which most often return variables.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You usually create a lot of function for yourself,<br>and they represent the shape of the program you are writing.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If you are building a virtual world or a <a href=\"https://en.wikipedia.org/wiki/MUD\">MUD</a>,<br>then you will have a function that says player.go(‘north’);</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Or better yet, room.connect(‘north’, universe.createRoom(‘Bathroom’));</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Many of the tiny functions come from your operating system,<br>so like open(‘letter.txt’) is something that the programming language creators let you have.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is a wrapper function, for the operating system’s,<br>open file call.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The programming language it self will bring in a lot of functions,<br>one of the coolest and most forbidden functions in JavaScript is eval().</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is often said that it is evil,<br>so I am not going to tell you about it.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Some variables are actually groups of variables,<br>groups are a big deal in programming.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You can use a group variable to store,<br>a bunch of urls that you then download and convert to plain text.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This way you can simplify your news,<br>and just get the plain text version.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If statements have a sister, that comes in useful here,<br>and that is the loop.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Here you can say, I will loop over my list of urls,<br>and call some functions like downloadUrl(), and then convertToText().</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Functions can also be grouped,<br>and that is where you hear this “dot” a lot.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It does not make sense to put functions in a sequence,<br>like a list of news adresses for download...</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">So you throw them in a bag,<br>like a generic group.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The word bag is something I just use here,<br>to show you that it is just this generic thing.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And this would just be another variable,<br>in your program.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The correct name for bag or generic group,<br>is object.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Things get pretty fuzzy here,<br>because why stop at putting functions in a bag...</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Why not say:<br>user.name = “Alice”;</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The dot actually comes from the world of<br>Object Oriented Programming.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">In JavaScript you can have a ban like object,<br>where you don’t have to define it first or create a new instance of.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But that is just the short hand notation,<br>for the underlying object.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And you would want to use it so that you can have two variables names user1 and user2,<br>and user1 can be alice, and user2 can be bob - without overriding anything.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">A more realistic example is where,<br>you have a list of users like in a spreadsheet, which is what a database is.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">In a spreadsheet your data automatically updates,<br>in a database, you create lots and lots of sheets and then join some of them when needed.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Here rather than thinking sheets,<br>you think in rows of data, where each row represents a user.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Often people go extra step,<br>and setup a useful user object for each row.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You can have a databaseRows.find(‘username’, ‘alice’);<br>which then returns a user object that would have some useful functions.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">So databaseRows, for more often database.query(),<br>fills the user object out for you.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If you were programming a MUD, or a virtual world,<br>you would define an object named room.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And then dream up what your room objects should be about,<br>do you want your rooms to have a .go() function which moves the player through some door.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Or do you want your user to have a user.go() function,<br>what sounds better for you?</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">What if you want to move a chair,<br>do you want to write a go function for a chair.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Or move function for the room,<br>or an inventory bag or object, that you attach to the user.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Where they can put their chair in their inventory,<br>then say player.go(‘living room’), and player.inventory.drop(‘chair’)?</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Building out Objects with functions,<br>can be like building a universe.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">So objects and lists, are like a higher level grouping mechanism,<br>for variables and functions.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Where functions can call other functions,<br>often based on if statements testing some variable,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And if you do have a list then you use a loop,<br>to apply some function to each of the items in the list.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And often in that function you have lots of if statements,<br>and call other functions, maybe do some more looping.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">There is this funny thing where people call HTML a programming language,<br>technically it isn’t, but those people don’t usually understand why.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">So HTML has these nested tags, and each tag can have attributes,<br>and in most cases you close the tag.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">So all this actually represents a hierarchy of objects,<br>all the tags have corresponding object, and tag attributes are applied to those objects.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You could create a tag named user,<br>with attributes name and email.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But the reason why HTML is not a programming language,<br>is that it is used to create a deeply nested hierarchy of variables.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is just like the variable creation part of a language,<br>converting tags to objects my be sometimes called hydration.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Because tags in their text form,<br>are like this dehydrated object hierarchy.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Inventions like <a href=\"https://svelte.dev/\">svelte</a> mix logic and loops with HTML,<br>so svelte’s markup is almost almost a language.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is a <a href=\"https://www.youtube.com/watch?v=4HuAnM6b2d8\">templating language</a>, because templating HTML,<br>is not really thought of as programming, templating often does not understand tags and sees text instead.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If you are going to learn a language learn JavaScript,<br>because it helps you program windowed applications with electron, on the server with node.js, and in the browser alongside HTML and SVG.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">HTML allows you to include a code editor in your program,<br>and SVG and canvas allow you to manipulate graphics, including <a href=\"https://threejs.org/\">3D graphics</a>.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">To pull in all those technologies together in C, Java, or Python, or PHP,<br>may not only represent a lot of work, but outdated or old libraries.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">As to whether or not you should consider learning programming,<br>knowing programming is like having a smartphone, it is the new standard.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">All the young people will eventually know it,<br>but the previous generations still can be <a href=\"https://www.youtube.com/watch?v=lFdnQlA4ucM\">Hip Hop!</a>, without the damn thing.</div>\n  </div>\n</div>",
  "print": "<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\"><span>Variables<sup>[1]</sup></span>, <span>functions<sup>[2]</sup></span>, <span>if statements<sup>[3]</sup></span>, <span>loops<sup>[4]</sup></span>,<br>and <span>objects<sup>[5]</sup></span> to group variables and functions together into a structure that makes sense to you.</div>\n  <div class=\"paragraph\">For example, my if(app.user.loggedIn()){app.navigation.signOutButton.visible = true}</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">So computer programming,<br>is super simple.</div>\n  <div class=\"paragraph\">If you stick to one programming language,<br>like latest modern JavaScript it is even simpler.</div>\n  <div class=\"paragraph\">Programming is just about variables that you define,<br>which hold things that yo use, like serverAddress = “example.com”;</div>\n  <div class=\"paragraph\">If statements that you use on your variables,<br>like if user.loggedIn then redirect(‘/home’);</div>\n  <div class=\"paragraph\">functions that you call,<br>which most often return variables.</div>\n  <div class=\"paragraph\">You usually create a lot of function for yourself,<br>and they represent the shape of the program you are writing.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">If you are building a virtual world or a <span>MUD<sup>[6]</sup></span>,<br>then you will have a function that says player.go(‘north’);</div>\n  <div class=\"paragraph\">Or better yet, room.connect(‘north’, universe.createRoom(‘Bathroom’));</div>\n  <div class=\"paragraph\">Many of the tiny functions come from your operating system,<br>so like open(‘letter.txt’) is something that the programming language creators let you have.</div>\n  <div class=\"paragraph\">It is a wrapper function, for the operating system’s,<br>open file call.</div>\n  <div class=\"paragraph\">The programming language it self will bring in a lot of functions,<br>one of the coolest and most forbidden functions in JavaScript is eval().</div>\n  <div class=\"paragraph\">It is often said that it is evil,<br>so I am not going to tell you about it.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Some variables are actually groups of variables,<br>groups are a big deal in programming.</div>\n  <div class=\"paragraph\">You can use a group variable to store,<br>a bunch of urls that you then download and convert to plain text.</div>\n  <div class=\"paragraph\">This way you can simplify your news,<br>and just get the plain text version.</div>\n  <div class=\"paragraph\">If statements have a sister, that comes in useful here,<br>and that is the loop.</div>\n  <div class=\"paragraph\">Here you can say, I will loop over my list of urls,<br>and call some functions like downloadUrl(), and then convertToText().</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Functions can also be grouped,<br>and that is where you hear this “dot” a lot.</div>\n  <div class=\"paragraph\">It does not make sense to put functions in a sequence,<br>like a list of news adresses for download...</div>\n  <div class=\"paragraph\">So you throw them in a bag,<br>like a generic group.</div>\n  <div class=\"paragraph\">The word bag is something I just use here,<br>to show you that it is just this generic thing.</div>\n  <div class=\"paragraph\">And this would just be another variable,<br>in your program.</div>\n  <div class=\"paragraph\">The correct name for bag or generic group,<br>is object.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Things get pretty fuzzy here,<br>because why stop at putting functions in a bag...</div>\n  <div class=\"paragraph\">Why not say:<br>user.name = “Alice”;</div>\n  <div class=\"paragraph\">The dot actually comes from the world of<br>Object Oriented Programming.</div>\n  <div class=\"paragraph\">In JavaScript you can have a ban like object,<br>where you don’t have to define it first or create a new instance of.</div>\n  <div class=\"paragraph\">But that is just the short hand notation,<br>for the underlying object.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">And you would want to use it so that you can have two variables names user1 and user2,<br>and user1 can be alice, and user2 can be bob - without overriding anything.</div>\n  <div class=\"paragraph\">A more realistic example is where,<br>you have a list of users like in a spreadsheet, which is what a database is.</div>\n  <div class=\"paragraph\">In a spreadsheet your data automatically updates,<br>in a database, you create lots and lots of sheets and then join some of them when needed.</div>\n  <div class=\"paragraph\">Here rather than thinking sheets,<br>you think in rows of data, where each row represents a user.</div>\n  <div class=\"paragraph\">Often people go extra step,<br>and setup a useful user object for each row.</div>\n  <div class=\"paragraph\">You can have a databaseRows.find(‘username’, ‘alice’);<br>which then returns a user object that would have some useful functions.</div>\n  <div class=\"paragraph\">So databaseRows, for more often database.query(),<br>fills the user object out for you.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">If you were programming a MUD, or a virtual world,<br>you would define an object named room.</div>\n  <div class=\"paragraph\">And then dream up what your room objects should be about,<br>do you want your rooms to have a .go() function which moves the player through some door.</div>\n  <div class=\"paragraph\">Or do you want your user to have a user.go() function,<br>what sounds better for you?</div>\n  <div class=\"paragraph\">What if you want to move a chair,<br>do you want to write a go function for a chair.</div>\n  <div class=\"paragraph\">Or move function for the room,<br>or an inventory bag or object, that you attach to the user.</div>\n  <div class=\"paragraph\">Where they can put their chair in their inventory,<br>then say player.go(‘living room’), and player.inventory.drop(‘chair’)?</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Building out Objects with functions,<br>can be like building a universe.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">So objects and lists, are like a higher level grouping mechanism,<br>for variables and functions.</div>\n  <div class=\"paragraph\">Where functions can call other functions,<br>often based on if statements testing some variable,</div>\n  <div class=\"paragraph\">And if you do have a list then you use a loop,<br>to apply some function to each of the items in the list.</div>\n  <div class=\"paragraph\">And often in that function you have lots of if statements,<br>and call other functions, maybe do some more looping.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">There is this funny thing where people call HTML a programming language,<br>technically it isn’t, but those people don’t usually understand why.</div>\n  <div class=\"paragraph\">So HTML has these nested tags, and each tag can have attributes,<br>and in most cases you close the tag.</div>\n  <div class=\"paragraph\">So all this actually represents a hierarchy of objects,<br>all the tags have corresponding object, and tag attributes are applied to those objects.</div>\n  <div class=\"paragraph\">You could create a tag named user,<br>with attributes name and email.</div>\n  <div class=\"paragraph\">But the reason why HTML is not a programming language,<br>is that it is used to create a deeply nested hierarchy of variables.</div>\n  <div class=\"paragraph\">It is just like the variable creation part of a language,<br>converting tags to objects my be sometimes called hydration.</div>\n  <div class=\"paragraph\">Because tags in their text form,<br>are like this dehydrated object hierarchy.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Inventions like <span>svelte<sup>[7]</sup></span> mix logic and loops with HTML,<br>so svelte’s markup is almost almost a language.</div>\n  <div class=\"paragraph\">It is a <span>templating language<sup>[8]</sup></span>, because templating HTML,<br>is not really thought of as programming, templating often does not understand tags and sees text instead.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">If you are going to learn a language learn JavaScript,<br>because it helps you program windowed applications with electron, on the server with node.js, and in the browser alongside HTML and SVG.</div>\n  <div class=\"paragraph\">HTML allows you to include a code editor in your program,<br>and SVG and canvas allow you to manipulate graphics, including <span>3D graphics<sup>[9]</sup></span>.</div>\n  <div class=\"paragraph\">To pull in all those technologies together in C, Java, or Python, or PHP,<br>may not only represent a lot of work, but outdated or old libraries.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">As to whether or not you should consider learning programming,<br>knowing programming is like having a smartphone, it is the new standard.</div>\n  <div class=\"paragraph\">All the young people will eventually know it,<br>but the previous generations still can be <span>Hip Hop!<sup>[10]</sup></span>, without the damn thing.</div>\n</div>\n<div class=\"break-after\">&nbsp;</div>\n<div>\n  <div class=\"section\" style=\"padding-bottom: 1rem;\">References</div>\n  <div>[1]: https://www.youtube.com/watch?v=J0y6XXdm4KI</div>\n  <div>[2]: https://www.youtube.com/watch?v=bOkuPo5VbTg</div>\n  <div>[3]: https://www.youtube.com/watch?v=IsG4Xd6LlsM</div>\n  <div>[4]: https://www.youtube.com/watch?v=6Hb0qZ3PVWI</div>\n  <div>[5]: https://www.youtube.com/watch?v=X0ipw1k7ygU</div>\n  <div>[6]: https://en.wikipedia.org/wiki/MUD</div>\n  <div>[7]: https://svelte.dev/</div>\n  <div>[8]: https://www.youtube.com/watch?v=4HuAnM6b2d8</div>\n  <div>[9]: https://threejs.org/</div>\n  <div>[10]: https://www.youtube.com/watch?v=lFdnQlA4ucM</div>\n</div>",
  "text": "Variables[1], functions[2], if statements[3], loops[4],\nand objects[5] to group variables and functions together into a structure that makes sense to you.\nFor example, my if(app.user.loggedIn()){app.navigation.signOutButton.visible = true}\n\nSo computer programming,\nis super simple.\nIf you stick to one programming language,\nlike latest modern JavaScript it is even simpler.\nProgramming is just about variables that you define,\nwhich hold things that yo use, like serverAddress = “example.com”;\nIf statements that you use on your variables,\nlike if user.loggedIn then redirect(‘/home’);\nfunctions that you call,\nwhich most often return variables.\nYou usually create a lot of function for yourself,\nand they represent the shape of the program you are writing.\n\nIf you are building a virtual world or a MUD[6],\nthen you will have a function that says player.go(‘north’);\nOr better yet, room.connect(‘north’, universe.createRoom(‘Bathroom’));\nMany of the tiny functions come from your operating system,\nso like open(‘letter.txt’) is something that the programming language creators let you have.\nIt is a wrapper function, for the operating system’s,\nopen file call.\nThe programming language it self will bring in a lot of functions,\none of the coolest and most forbidden functions in JavaScript is eval().\nIt is often said that it is evil,\nso I am not going to tell you about it.\n\nSome variables are actually groups of variables,\ngroups are a big deal in programming.\nYou can use a group variable to store,\na bunch of urls that you then download and convert to plain text.\nThis way you can simplify your news,\nand just get the plain text version.\nIf statements have a sister, that comes in useful here,\nand that is the loop.\nHere you can say, I will loop over my list of urls,\nand call some functions like downloadUrl(), and then convertToText().\n\nFunctions can also be grouped,\nand that is where you hear this “dot” a lot.\nIt does not make sense to put functions in a sequence,\nlike a list of news adresses for download...\nSo you throw them in a bag,\nlike a generic group.\nThe word bag is something I just use here,\nto show you that it is just this generic thing.\nAnd this would just be another variable,\nin your program.\nThe correct name for bag or generic group,\nis object.\n\nThings get pretty fuzzy here,\nbecause why stop at putting functions in a bag...\nWhy not say:\nuser.name = “Alice”;\nThe dot actually comes from the world of\nObject Oriented Programming.\nIn JavaScript you can have a ban like object,\nwhere you don’t have to define it first or create a new instance of.\nBut that is just the short hand notation,\nfor the underlying object.\n\nAnd you would want to use it so that you can have two variables names user1 and user2,\nand user1 can be alice, and user2 can be bob - without overriding anything.\nA more realistic example is where,\nyou have a list of users like in a spreadsheet, which is what a database is.\nIn a spreadsheet your data automatically updates,\nin a database, you create lots and lots of sheets and then join some of them when needed.\nHere rather than thinking sheets,\nyou think in rows of data, where each row represents a user.\nOften people go extra step,\nand setup a useful user object for each row.\nYou can have a databaseRows.find(‘username’, ‘alice’);\nwhich then returns a user object that would have some useful functions.\nSo databaseRows, for more often database.query(),\nfills the user object out for you.\n\nIf you were programming a MUD, or a virtual world,\nyou would define an object named room.\nAnd then dream up what your room objects should be about,\ndo you want your rooms to have a .go() function which moves the player through some door.\nOr do you want your user to have a user.go() function,\nwhat sounds better for you?\nWhat if you want to move a chair,\ndo you want to write a go function for a chair.\nOr move function for the room,\nor an inventory bag or object, that you attach to the user.\nWhere they can put their chair in their inventory,\nthen say player.go(‘living room’), and player.inventory.drop(‘chair’)?\n\nBuilding out Objects with functions,\ncan be like building a universe.\n\nSo objects and lists, are like a higher level grouping mechanism,\nfor variables and functions.\nWhere functions can call other functions,\noften based on if statements testing some variable,\nAnd if you do have a list then you use a loop,\nto apply some function to each of the items in the list.\nAnd often in that function you have lots of if statements,\nand call other functions, maybe do some more looping.\n\nThere is this funny thing where people call HTML a programming language,\ntechnically it isn’t, but those people don’t usually understand why.\nSo HTML has these nested tags, and each tag can have attributes,\nand in most cases you close the tag.\nSo all this actually represents a hierarchy of objects,\nall the tags have corresponding object, and tag attributes are applied to those objects.\nYou could create a tag named user,\nwith attributes name and email.\nBut the reason why HTML is not a programming language,\nis that it is used to create a deeply nested hierarchy of variables.\nIt is just like the variable creation part of a language,\nconverting tags to objects my be sometimes called hydration.\nBecause tags in their text form,\nare like this dehydrated object hierarchy.\n\nInventions like svelte[7] mix logic and loops with HTML,\nso svelte’s markup is almost almost a language.\nIt is a templating language[8], because templating HTML,\nis not really thought of as programming, templating often does not understand tags and sees text instead.\n\nIf you are going to learn a language learn JavaScript,\nbecause it helps you program windowed applications with electron, on the server with node.js, and in the browser alongside HTML and SVG.\nHTML allows you to include a code editor in your program,\nand SVG and canvas allow you to manipulate graphics, including 3D graphics[9].\nTo pull in all those technologies together in C, Java, or Python, or PHP,\nmay not only represent a lot of work, but outdated or old libraries.\n\nAs to whether or not you should consider learning programming,\nknowing programming is like having a smartphone, it is the new standard.\nAll the young people will eventually know it,\nbut the previous generations still can be Hip Hop![10], without the damn thing.\n \nReferences\n[1]: https://www.youtube.com/watch?v=J0y6XXdm4KI\n[2]: https://www.youtube.com/watch?v=bOkuPo5VbTg\n[3]: https://www.youtube.com/watch?v=IsG4Xd6LlsM\n[4]: https://www.youtube.com/watch?v=6Hb0qZ3PVWI\n[5]: https://www.youtube.com/watch?v=X0ipw1k7ygU\n[6]: https://en.wikipedia.org/wiki/MUD\n[7]: https://svelte.dev/\n[8]: https://www.youtube.com/watch?v=4HuAnM6b2d8\n[9]: https://threejs.org/\n[10]: https://www.youtube.com/watch?v=lFdnQlA4ucM",
  "images": [],
  "links": [
    {
      "title": "Variables",
      "url": "https://www.youtube.com/watch?v=J0y6XXdm4KI",
      "hostname": "www.youtube.com"
    },
    {
      "title": "functions",
      "url": "https://www.youtube.com/watch?v=bOkuPo5VbTg",
      "hostname": "www.youtube.com"
    },
    {
      "title": "if statements",
      "url": "https://www.youtube.com/watch?v=IsG4Xd6LlsM",
      "hostname": "www.youtube.com"
    },
    {
      "title": "loops",
      "url": "https://www.youtube.com/watch?v=6Hb0qZ3PVWI",
      "hostname": "www.youtube.com"
    },
    {
      "title": "objects",
      "url": "https://www.youtube.com/watch?v=X0ipw1k7ygU",
      "hostname": "www.youtube.com"
    },
    {
      "title": "MUD",
      "url": "https://en.wikipedia.org/wiki/MUD",
      "hostname": "en.wikipedia.org"
    },
    {
      "title": "svelte",
      "url": "https://svelte.dev/",
      "hostname": "svelte.dev"
    },
    {
      "title": "templating language",
      "url": "https://www.youtube.com/watch?v=4HuAnM6b2d8",
      "hostname": "www.youtube.com"
    },
    {
      "title": "3D graphics",
      "url": "https://threejs.org/",
      "hostname": "threejs.org"
    },
    {
      "title": "Hip Hop!",
      "url": "https://www.youtube.com/watch?v=lFdnQlA4ucM",
      "hostname": "www.youtube.com"
    }
  ]
}