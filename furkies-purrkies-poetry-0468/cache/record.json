{
  "name": "furkies-purrkies-poetry-0468",
  "title": "Programming Is Not That Scary",
  "date": "2021-06-11T23:05:56.713Z",
  "image": "poetry-0468-illustration.jpg",
  "audio": "poetry-0468.mp3",
  "artwork": "https://www.pexels.com/photo/woman-sitting-while-operating-macbook-pro-1181676/",
  "id": "furkies-purrkies-poetry-0468",
  "attachments": {},
  "html": "<div class=\"section\">\n  <p>It depends where you start,</p>\n  <p>start someplace easy and neat.</p>\n</div>\n\n<div class=\"section\">\n  <p><a href=\"https://www.youtube.com/watch?v=6ffUHK7o5yI\">Modern web</a> is a <a href=\"https://www.youtube.com/watch?v=gT0Lh1eYk78\">mix of several technologies</a>,</p>\n  <p>and each _can_ be <a href=\"https://www.youtube.com/watch?v=s-pCNqqUbfI\">very overwhelming</a>, not to mention all together.</p>\n</div>\n\n<div class=\"section\">\n  <p>But the <a href=\"https://www.youtube.com/results?search_query=programmer+burnout\">web is unfortunately tough on all</a>,</p>\n  <p>even hardcore programmers.</p>\n</div>\n\n<div class=\"section\">\n  <p>As a lead programmer, <a href=\"https://www.youtube.com/watch?v=wwbM63-LFD4\">you don&apos;t actually have to know a programming language</a>,</p>\n  <p><a href=\"https://www.youtube.com/results?search_query=how+to+become+a+program+manager\">managing the creation of your program</a>, is <a href=\"https://www.fiverr.com/categories/programming-tech/web-programming-services/web-application?source=category_filters\">far more powerful than writing it yourself</a>.</p>\n</div>\n\n<div class=\"section\">\n  <hr>\n</div>\n\n<div class=\"section\">\n  <p><a href=\"https://www.youtube.com/watch?v=H8K-Rg_7Tbo\">Hosting on the web can involve a lot of complexity</a>,</p>\n  <p>and you probably don&apos;t want to rely on any company providing application-specific services...</p>\n</div>\n\n<div class=\"section\">\n  <p>With the exception of the <a href=\"https://www.youtube.com/watch?v=iox7fr7p5Hc\">operating system you pick</a>,</p>\n  <p>and the <a href=\"https://www.youtube.com/user/LinodeCloudHosting\">hosting company</a>.</p>\n</div>\n\n<div class=\"section\">\n  <p>And even with that, you already committed to <a href=\"https://www.youtube.com/watch?v=wsh64rjnRas\">owning a web server</a>,</p>\n  <p>the moment your server goes online, there will be <a href=\"https://www.youtube.com/watch?v=7pJKBL9x6bY\">automated tools scanning it for exploits</a>, and trying to guess the password.</p>\n</div>\n\n<div class=\"section\">\n  <hr>\n</div>\n\n<div class=\"section\">\n  <p>The computers <a href=\"https://www.youtube.com/watch?v=4imIIKEK5gc\">scanning</a> or trying to break into your server, by the way,</p>\n  <p>are hacked, they are the ones that the automated hacking programs already broke into.</p>\n</div>\n\n<div class=\"section\">\n  <p>Any other traffic will be coming from <a href=\"https://www.youtube.com/watch?v=U8pCRMrbSl4\">Tor or VPN</a> networks,</p>\n  <p>often times the location of the hacked server is obscured.</p>\n</div>\n\n<div class=\"section\">\n  <p>There is nothing you can do,</p>\n  <p>often there is nobody to care that their server got hacked.</p>\n</div>\n\n<div class=\"section\">\n  <p>The moment one gets shut down,</p>\n  <p>couple more will get hacked elsewhere,</p>\n</div>\n\n<div class=\"section\">\n  <p>Unless you want to run a <a href=\"https://www.youtube.com/watch?v=0WUaI2pNiPI\">honeypot</a> tracking those servers,</p>\n  <p>you probably don&apos;t want to program web applications unless it is something big.</p>\n</div>\n\n<div class=\"section\">\n  <hr>\n</div>\n\n<div class=\"section\">\n  <p><a href=\"https://www.youtube.com/watch?v=wWEID0d6wfo\">As far as web goes, you may wish to start with serverless functions</a>,</p>\n  <p>if you application is small, then you are going to be somewhat worried about performance.</p>\n</div>\n\n<div class=\"section\">\n  <p>But the serverless pattern is hard to beat,</p>\n  <p>when it comes to worrying about growth.</p>\n</div>\n\n<div class=\"section\">\n  <p>And it is actually a nice way to start programming,</p>\n  <p>because you just create simple functions.</p>\n</div>\n\n<div class=\"section\">\n  <p>These functions are executed as needed by nameless, random servers,</p>\n  <p>once you start noticing that you are running out of servers, you simply add more.</p>\n</div>\n\n<div class=\"section\">\n  <p>These servers can be though of as workers in your company,</p>\n  <p>and during development you will probably only need one.</p>\n</div>\n\n<div class=\"section\">\n  <p>And one neat thing about those servers is that,</p>\n  <p>is that there is nothing special running on them, so you can just reset them.</p>\n</div>\n\n<div class=\"section\">\n  <p>All the functions that you and your users need to have executed, <a href=\"https://www.youtube.com/watch?v=HAj7F37SfG8\">go into a task queue</a>,</p>\n  <p>and then these poor nameless servers, start executing those functions.</p>\n</div>\n\n<div class=\"section\">\n  <p>On the internet every millisecond counts,</p>\n  <p>but it is interesting to have your worker-servers at home just to envision the process.</p>\n</div>\n\n<div class=\"section\">\n  <p>Normally, I wouldn&apos;t mention this, but <a href=\"https://www.youtube.com/watch?v=Iz0MFOKmmDY\">this is how the modern CPU works</a>,</p>\n  <p>you need to have multiple workers even in your smallest programs on your own workstation to take advantage of the CPU.</p>\n</div>\n\n<div class=\"section\">\n  <hr>\n</div>\n\n<div class=\"section\">\n  <p>But notice how phone apps use the Phone CPU,</p>\n  <p>and it is the worst CPU to use, it is slow, battery powered, and you need it for emergencies, and for answering the phone.</p>\n</div>\n\n<div class=\"section\">\n  <p>At the same time, if there was one large company trying to keep up with the processing power needed to make all the apps go,</p>\n  <p>they would need a large and complex operation.</p>\n</div>\n\n<div class=\"section\">\n  <p>Apps, that you pay for, burn up your own CPU and battery power,</p>\n  <p>they are not web applications, they are resilient, decoupled, distributed.</p>\n</div>\n\n<div class=\"section\">\n  <p>They are clearly a success,</p>\n  <p>they make the phone more useful.</p>\n</div>\n\n<div class=\"section\">\n  <hr>\n</div>\n\n<div class=\"section\">\n  <p>But as far as complex <a href=\"https://www.youtube.com/watch?v=XIGSJshYb90\">Graphic User Interface</a> applications go,</p>\n  <p>put them on the desktop, at least at first.</p>\n</div>\n\n<div class=\"section\">\n  <p>Even with the crazy restrictions that popular Desktop Operating Systems created,</p>\n  <p>the walled gardens, non-free developer networks a Desktop is still a good target.</p>\n</div>\n\n<div class=\"section\">\n  <hr>\n</div>\n\n<div class=\"section\">\n  <p>For one, when you create a desktop application,</p>\n  <p>it is not going to be instantly attacked by hacked computers.</p>\n</div>\n\n<div class=\"section\">\n  <p>And if it is a good idea, like <a href=\"https://www.youtube.com/watch?v=FquNpWdf9vg\">HyperCard</a> was,</p>\n  <p>you can sell it for a good price.</p>\n</div>\n\n<div class=\"section\">\n  <hr>\n</div>\n\n<div class=\"section\">\n  <p>When developing for the Desktop should use a base like <a href=\"https://www.youtube.com/watch?v=8YP_nOCO-4Q\">electron</a>,</p>\n  <p>or <a href=\"https://www.youtube.com/watch?v=5UsGnjPYxLU\">NW.js</a>.</p>\n</div>\n\n<div class=\"section\">\n  <p>The big weakness of desktops,</p>\n  <p>is that there are three incompatible operating systems, electron and NW.js, are actually <a href=\"https://www.youtube.com/watch?v=TWFUSxqMJic\">cross platform</a> and repair that problem.</p>\n</div>\n\n<div class=\"section\">\n  <p>You don&apos;t have to start Developing your application User Interface First,</p>\n  <p>learning programming relies on good ideas, not just what is possible, but also, what is good.</p>\n</div>\n\n<div class=\"section\">\n  <p>For example <a href=\"https://www.youtube.com/watch?v=JLPiMl8XUKU\">Smalltalk</a> has a very consistent user interface that requires very little GUI programming,</p>\n  <p>it is a good idea to write the non-GUI core of your program first, at the very least, to make it easily testable.</p>\n</div>\n\n<div class=\"section\">\n  <p>If you do like complex architecture, a well thought out <a href=\"https://www.youtube.com/watch?v=T-HGdc8L-7w\">Object Oriented Programming</a> language can be useful,</p>\n  <p>even better if you use <a href=\"https://www.youtube.com/watch?v=JuWEQsE7Hlo\">Behavior Driven Development</a> that describes your program core in a readable subset of English.</p>\n</div>\n\n<div class=\"section\">\n  <p>This is a good place to mention <a href=\"https://www.youtube.com/watch?v=83v8cdvGfeA\">MobX and Redux</a> and similar application state based approaches,</p>\n  <p>where high level actions modify a non GUI model of your application.</p>\n</div>\n\n<div class=\"section\">\n  <hr>\n</div>\n\n<div class=\"section\">\n  <p>You shouldn&apos;t let programming become complicated, though,</p>\n  <p>look at <a href=\"https://www.youtube.com/watch?v=OIn5DZU_NoA\">Apple&apos;s Siri</a>, it is just chat; or filling out forms one line at a time.</p>\n</div>\n\n<div class=\"section\">\n  <p>Siri combined with a program like <a href=\"https://www.youtube.com/watch?v=QzvqSVgc2t4\">MUD</a>,</p>\n  <p>can start keeping track of context of conversations and learn and become more intelligent.</p>\n</div>\n\n<div class=\"section\">\n  <hr>\n</div>\n\n<div class=\"section\">\n  <p>Finally, I think the best type of a program is one that has two kind of users,</p>\n  <p>the end-user that enhance their program by making additional purchases, and plugin-creators that further expand your original program idea.</p>\n</div>\n\n<div class=\"section\">\n  <p>This isn&apos;t so much about creating something as toxic as in-game-purchases,</p>\n  <p>but rather developing the initial features of your program as if you were a third-party content creator.</p>\n</div>\n\n<div class=\"section\">\n  <p>Giving your program life from inside out,</p>\n  <p>all the way back from its most fundamental features.</p>\n</div>\n\n<div class=\"section\">\n  <p>This way you can upgrade your program, one board at a time,</p>\n  <p>like the <a href=\"https://www.youtube.com/watch?v=iVlIZJTwgyQ\">Ship of Theseus</a>.</p>\n</div>",
  "bootstrap": "<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It depends where you start,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">start someplace easy and neat.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\"><a href=\"https://www.youtube.com/watch?v=6ffUHK7o5yI\">Modern web</a> is a <a href=\"https://www.youtube.com/watch?v=gT0Lh1eYk78\">mix of several technologies</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">and each _can_ be <a href=\"https://www.youtube.com/watch?v=s-pCNqqUbfI\">very overwhelming</a>, not to mention all together.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But the <a href=\"https://www.youtube.com/results?search_query=programmer+burnout\">web is unfortunately tough on all</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">even hardcore programmers.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">As a lead programmer, <a href=\"https://www.youtube.com/watch?v=wwbM63-LFD4\">you don't actually have to know a programming language</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\"><a href=\"https://www.youtube.com/results?search_query=how+to+become+a+program+manager\">managing the creation of your program</a>, is <a href=\"https://www.fiverr.com/categories/programming-tech/web-programming-services/web-application?source=category_filters\">far more powerful than writing it yourself</a>.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\"><a href=\"https://www.youtube.com/watch?v=H8K-Rg_7Tbo\">Hosting on the web can involve a lot of complexity</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">and you probably don't want to rely on any company providing application-specific services...</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">With the exception of the <a href=\"https://www.youtube.com/watch?v=iox7fr7p5Hc\">operating system you pick</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">and the <a href=\"https://www.youtube.com/user/LinodeCloudHosting\">hosting company</a>.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And even with that, you already committed to <a href=\"https://www.youtube.com/watch?v=wsh64rjnRas\">owning a web server</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">the moment your server goes online, there will be <a href=\"https://www.youtube.com/watch?v=7pJKBL9x6bY\">automated tools scanning it for exploits</a>, and trying to guess the password.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The computers <a href=\"https://www.youtube.com/watch?v=4imIIKEK5gc\">scanning</a> or trying to break into your server, by the way,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">are hacked, they are the ones that the automated hacking programs already broke into.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Any other traffic will be coming from <a href=\"https://www.youtube.com/watch?v=U8pCRMrbSl4\">Tor or VPN</a> networks,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">often times the location of the hacked server is obscured.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">There is nothing you can do,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">often there is nobody to care that their server got hacked.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The moment one gets shut down,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">couple more will get hacked elsewhere,</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Unless you want to run a <a href=\"https://www.youtube.com/watch?v=0WUaI2pNiPI\">honeypot</a> tracking those servers,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">you probably don't want to program web applications unless it is something big.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\"><a href=\"https://www.youtube.com/watch?v=wWEID0d6wfo\">As far as web goes, you may wish to start with serverless functions</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">if you application is small, then you are going to be somewhat worried about performance.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But the serverless pattern is hard to beat,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">when it comes to worrying about growth.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And it is actually a nice way to start programming,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">because you just create simple functions.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">These functions are executed as needed by nameless, random servers,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">once you start noticing that you are running out of servers, you simply add more.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">These servers can be though of as workers in your company,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">and during development you will probably only need one.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And one neat thing about those servers is that,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">is that there is nothing special running on them, so you can just reset them.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">All the functions that you and your users need to have executed, <a href=\"https://www.youtube.com/watch?v=HAj7F37SfG8\">go into a task queue</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">and then these poor nameless servers, start executing those functions.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">On the internet every millisecond counts,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">but it is interesting to have your worker-servers at home just to envision the process.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Normally, I wouldn't mention this, but <a href=\"https://www.youtube.com/watch?v=Iz0MFOKmmDY\">this is how the modern CPU works</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">you need to have multiple workers even in your smallest programs on your own workstation to take advantage of the CPU.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But notice how phone apps use the Phone CPU,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">and it is the worst CPU to use, it is slow, battery powered, and you need it for emergencies, and for answering the phone.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">At the same time, if there was one large company trying to keep up with the processing power needed to make all the apps go,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">they would need a large and complex operation.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Apps, that you pay for, burn up your own CPU and battery power,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">they are not web applications, they are resilient, decoupled, distributed.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">They are clearly a success,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">they make the phone more useful.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But as far as complex <a href=\"https://www.youtube.com/watch?v=XIGSJshYb90\">Graphic User Interface</a> applications go,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">put them on the desktop, at least at first.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Even with the crazy restrictions that popular Desktop Operating Systems created,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">the walled gardens, non-free developer networks a Desktop is still a good target.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">For one, when you create a desktop application,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">it is not going to be instantly attacked by hacked computers.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And if it is a good idea, like <a href=\"https://www.youtube.com/watch?v=FquNpWdf9vg\">HyperCard</a> was,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">you can sell it for a good price.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">When developing for the Desktop should use a base like <a href=\"https://www.youtube.com/watch?v=8YP_nOCO-4Q\">electron</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">or <a href=\"https://www.youtube.com/watch?v=5UsGnjPYxLU\">NW.js</a>.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The big weakness of desktops,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">is that there are three incompatible operating systems, electron and NW.js, are actually <a href=\"https://www.youtube.com/watch?v=TWFUSxqMJic\">cross platform</a> and repair that problem.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You don't have to start Developing your application User Interface First,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">learning programming relies on good ideas, not just what is possible, but also, what is good.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">For example <a href=\"https://www.youtube.com/watch?v=JLPiMl8XUKU\">Smalltalk</a> has a very consistent user interface that requires very little GUI programming,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">it is a good idea to write the non-GUI core of your program first, at the very least, to make it easily testable.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If you do like complex architecture, a well thought out <a href=\"https://www.youtube.com/watch?v=T-HGdc8L-7w\">Object Oriented Programming</a> language can be useful,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">even better if you use <a href=\"https://www.youtube.com/watch?v=JuWEQsE7Hlo\">Behavior Driven Development</a> that describes your program core in a readable subset of English.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This is a good place to mention <a href=\"https://www.youtube.com/watch?v=83v8cdvGfeA\">MobX and Redux</a> and similar application state based approaches,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">where high level actions modify a non GUI model of your application.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You shouldn't let programming become complicated, though,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">look at <a href=\"https://www.youtube.com/watch?v=OIn5DZU_NoA\">Apple's Siri</a>, it is just chat; or filling out forms one line at a time.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Siri combined with a program like <a href=\"https://www.youtube.com/watch?v=QzvqSVgc2t4\">MUD</a>,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">can start keeping track of context of conversations and learn and become more intelligent.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Finally, I think the best type of a program is one that has two kind of users,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">the end-user that enhance their program by making additional purchases, and plugin-creators that further expand your original program idea.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This isn't so much about creating something as toxic as in-game-purchases,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">but rather developing the initial features of your program as if you were a third-party content creator.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Giving your program life from inside out,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">all the way back from its most fundamental features.</div>\n  </div>\n</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This way you can upgrade your program, one board at a time,</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">like the <a href=\"https://www.youtube.com/watch?v=iVlIZJTwgyQ\">Ship of Theseus</a>.</div>\n  </div>\n</div>",
  "print": "<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">It depends where you start,</div>\n  <div class=\"paragraph\">start someplace easy and neat.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\"><span>Modern web<sup>[1]</sup></span> is a <span>mix of several technologies<sup>[2]</sup></span>,</div>\n  <div class=\"paragraph\">and each _can_ be <span>very overwhelming<sup>[3]</sup></span>, not to mention all together.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">But the <span>web is unfortunately tough on all<sup>[4]</sup></span>,</div>\n  <div class=\"paragraph\">even hardcore programmers.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">As a lead programmer, <span>you don't actually have to know a programming language<sup>[5]</sup></span>,</div>\n  <div class=\"paragraph\"><span>managing the creation of your program<sup>[6]</sup></span>, is <span>far more powerful than writing it yourself<sup>[7]</sup></span>.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\"><span>Hosting on the web can involve a lot of complexity<sup>[8]</sup></span>,</div>\n  <div class=\"paragraph\">and you probably don't want to rely on any company providing application-specific services...</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">With the exception of the <span>operating system you pick<sup>[9]</sup></span>,</div>\n  <div class=\"paragraph\">and the <span>hosting company<sup>[10]</sup></span>.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">And even with that, you already committed to <span>owning a web server<sup>[11]</sup></span>,</div>\n  <div class=\"paragraph\">the moment your server goes online, there will be <span>automated tools scanning it for exploits<sup>[12]</sup></span>, and trying to guess the password.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">The computers <span>scanning<sup>[13]</sup></span> or trying to break into your server, by the way,</div>\n  <div class=\"paragraph\">are hacked, they are the ones that the automated hacking programs already broke into.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Any other traffic will be coming from <span>Tor or VPN<sup>[14]</sup></span> networks,</div>\n  <div class=\"paragraph\">often times the location of the hacked server is obscured.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">There is nothing you can do,</div>\n  <div class=\"paragraph\">often there is nobody to care that their server got hacked.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">The moment one gets shut down,</div>\n  <div class=\"paragraph\">couple more will get hacked elsewhere,</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Unless you want to run a <span>honeypot<sup>[15]</sup></span> tracking those servers,</div>\n  <div class=\"paragraph\">you probably don't want to program web applications unless it is something big.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\"><span>As far as web goes, you may wish to start with serverless functions<sup>[16]</sup></span>,</div>\n  <div class=\"paragraph\">if you application is small, then you are going to be somewhat worried about performance.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">But the serverless pattern is hard to beat,</div>\n  <div class=\"paragraph\">when it comes to worrying about growth.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">And it is actually a nice way to start programming,</div>\n  <div class=\"paragraph\">because you just create simple functions.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">These functions are executed as needed by nameless, random servers,</div>\n  <div class=\"paragraph\">once you start noticing that you are running out of servers, you simply add more.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">These servers can be though of as workers in your company,</div>\n  <div class=\"paragraph\">and during development you will probably only need one.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">And one neat thing about those servers is that,</div>\n  <div class=\"paragraph\">is that there is nothing special running on them, so you can just reset them.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">All the functions that you and your users need to have executed, <span>go into a task queue<sup>[17]</sup></span>,</div>\n  <div class=\"paragraph\">and then these poor nameless servers, start executing those functions.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">On the internet every millisecond counts,</div>\n  <div class=\"paragraph\">but it is interesting to have your worker-servers at home just to envision the process.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Normally, I wouldn't mention this, but <span>this is how the modern CPU works<sup>[18]</sup></span>,</div>\n  <div class=\"paragraph\">you need to have multiple workers even in your smallest programs on your own workstation to take advantage of the CPU.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">But notice how phone apps use the Phone CPU,</div>\n  <div class=\"paragraph\">and it is the worst CPU to use, it is slow, battery powered, and you need it for emergencies, and for answering the phone.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">At the same time, if there was one large company trying to keep up with the processing power needed to make all the apps go,</div>\n  <div class=\"paragraph\">they would need a large and complex operation.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Apps, that you pay for, burn up your own CPU and battery power,</div>\n  <div class=\"paragraph\">they are not web applications, they are resilient, decoupled, distributed.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">They are clearly a success,</div>\n  <div class=\"paragraph\">they make the phone more useful.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">But as far as complex <span>Graphic User Interface<sup>[19]</sup></span> applications go,</div>\n  <div class=\"paragraph\">put them on the desktop, at least at first.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Even with the crazy restrictions that popular Desktop Operating Systems created,</div>\n  <div class=\"paragraph\">the walled gardens, non-free developer networks a Desktop is still a good target.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">For one, when you create a desktop application,</div>\n  <div class=\"paragraph\">it is not going to be instantly attacked by hacked computers.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">And if it is a good idea, like <span>HyperCard<sup>[20]</sup></span> was,</div>\n  <div class=\"paragraph\">you can sell it for a good price.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">When developing for the Desktop should use a base like <span>electron<sup>[21]</sup></span>,</div>\n  <div class=\"paragraph\">or <span>NW.js<sup>[22]</sup></span>.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">The big weakness of desktops,</div>\n  <div class=\"paragraph\">is that there are three incompatible operating systems, electron and NW.js, are actually <span>cross platform<sup>[23]</sup></span> and repair that problem.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">You don't have to start Developing your application User Interface First,</div>\n  <div class=\"paragraph\">learning programming relies on good ideas, not just what is possible, but also, what is good.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">For example <span>Smalltalk<sup>[24]</sup></span> has a very consistent user interface that requires very little GUI programming,</div>\n  <div class=\"paragraph\">it is a good idea to write the non-GUI core of your program first, at the very least, to make it easily testable.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">If you do like complex architecture, a well thought out <span>Object Oriented Programming<sup>[25]</sup></span> language can be useful,</div>\n  <div class=\"paragraph\">even better if you use <span>Behavior Driven Development<sup>[26]</sup></span> that describes your program core in a readable subset of English.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">This is a good place to mention <span>MobX and Redux<sup>[27]</sup></span> and similar application state based approaches,</div>\n  <div class=\"paragraph\">where high level actions modify a non GUI model of your application.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">You shouldn't let programming become complicated, though,</div>\n  <div class=\"paragraph\">look at <span>Apple's Siri<sup>[28]</sup></span>, it is just chat; or filling out forms one line at a time.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Siri combined with a program like <span>MUD<sup>[29]</sup></span>,</div>\n  <div class=\"paragraph\">can start keeping track of context of conversations and learn and become more intelligent.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Finally, I think the best type of a program is one that has two kind of users,</div>\n  <div class=\"paragraph\">the end-user that enhance their program by making additional purchases, and plugin-creators that further expand your original program idea.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">This isn't so much about creating something as toxic as in-game-purchases,</div>\n  <div class=\"paragraph\">but rather developing the initial features of your program as if you were a third-party content creator.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Giving your program life from inside out,</div>\n  <div class=\"paragraph\">all the way back from its most fundamental features.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">This way you can upgrade your program, one board at a time,</div>\n  <div class=\"paragraph\">like the <span>Ship of Theseus<sup>[30]</sup></span>.</div>\n</div>\n<div class=\"break-after\">&nbsp;</div>\n<div>\n  <div class=\"section\" style=\"padding-bottom: 1rem;\">References</div>\n  <div>[1]: https://www.youtube.com/watch?v=6ffUHK7o5yI</div>\n  <div>[2]: https://www.youtube.com/watch?v=gT0Lh1eYk78</div>\n  <div>[3]: https://www.youtube.com/watch?v=s-pCNqqUbfI</div>\n  <div>[4]: https://www.youtube.com/results?search_query=programmer+burnout</div>\n  <div>[5]: https://www.youtube.com/watch?v=wwbM63-LFD4</div>\n  <div>[6]: https://www.youtube.com/results?search_query=how+to+become+a+program+manager</div>\n  <div>[7]: https://www.fiverr.com/categories/programming-tech/web-programming-services/web-application?source=category_filters</div>\n  <div>[8]: https://www.youtube.com/watch?v=H8K-Rg_7Tbo</div>\n  <div>[9]: https://www.youtube.com/watch?v=iox7fr7p5Hc</div>\n  <div>[10]: https://www.youtube.com/user/LinodeCloudHosting</div>\n  <div>[11]: https://www.youtube.com/watch?v=wsh64rjnRas</div>\n  <div>[12]: https://www.youtube.com/watch?v=7pJKBL9x6bY</div>\n  <div>[13]: https://www.youtube.com/watch?v=4imIIKEK5gc</div>\n  <div>[14]: https://www.youtube.com/watch?v=U8pCRMrbSl4</div>\n  <div>[15]: https://www.youtube.com/watch?v=0WUaI2pNiPI</div>\n  <div>[16]: https://www.youtube.com/watch?v=wWEID0d6wfo</div>\n  <div>[17]: https://www.youtube.com/watch?v=HAj7F37SfG8</div>\n  <div>[18]: https://www.youtube.com/watch?v=Iz0MFOKmmDY</div>\n  <div>[19]: https://www.youtube.com/watch?v=XIGSJshYb90</div>\n  <div>[20]: https://www.youtube.com/watch?v=FquNpWdf9vg</div>\n  <div>[21]: https://www.youtube.com/watch?v=8YP_nOCO-4Q</div>\n  <div>[22]: https://www.youtube.com/watch?v=5UsGnjPYxLU</div>\n  <div>[23]: https://www.youtube.com/watch?v=TWFUSxqMJic</div>\n  <div>[24]: https://www.youtube.com/watch?v=JLPiMl8XUKU</div>\n  <div>[25]: https://www.youtube.com/watch?v=T-HGdc8L-7w</div>\n  <div>[26]: https://www.youtube.com/watch?v=JuWEQsE7Hlo</div>\n  <div>[27]: https://www.youtube.com/watch?v=83v8cdvGfeA</div>\n  <div>[28]: https://www.youtube.com/watch?v=OIn5DZU_NoA</div>\n  <div>[29]: https://www.youtube.com/watch?v=QzvqSVgc2t4</div>\n  <div>[30]: https://www.youtube.com/watch?v=iVlIZJTwgyQ</div>\n</div>",
  "text": "It depends where you start,\nstart someplace easy and neat.\n\nModern web is a mix of several technologies,\nand each _can_ be very overwhelming, not to mention all together.\n\nBut the web is unfortunately tough on all,\neven hardcore programmers.\n\nAs a lead programmer, you don't actually have to know a programming language,\nmanaging the creation of your program, is far more powerful than writing it yourself.\n\nHosting on the web can involve a lot of complexity,\nand you probably don't want to rely on any company providing application-specific services...\n\nWith the exception of the operating system you pick,\nand the hosting company.\n\nAnd even with that, you already committed to owning a web server,\nthe moment your server goes online, there will be automated tools scanning it for exploits, and trying to guess the password.\n\nThe computers scanning or trying to break into your server, by the way,\nare hacked, they are the ones that the automated hacking programs already broke into.\n\nAny other traffic will be coming from Tor or VPN networks,\noften times the location of the hacked server is obscured.\n\nThere is nothing you can do,\noften there is nobody to care that their server got hacked.\n\nThe moment one gets shut down,\ncouple more will get hacked elsewhere,\n\nUnless you want to run a honeypot tracking those servers,\nyou probably don't want to program web applications unless it is something big.\n\nAs far as web goes, you may wish to start with serverless functions,\nif you application is small, then you are going to be somewhat worried about performance.\n\nBut the serverless pattern is hard to beat,\nwhen it comes to worrying about growth.\n\nAnd it is actually a nice way to start programming,\nbecause you just create simple functions.\n\nThese functions are executed as needed by nameless, random servers,\nonce you start noticing that you are running out of servers, you simply add more.\n\nThese servers can be though of as workers in your company,\nand during development you will probably only need one.\n\nAnd one neat thing about those servers is that,\nis that there is nothing special running on them, so you can just reset them.\n\nAll the functions that you and your users need to have executed, go into a task queue,\nand then these poor nameless servers, start executing those functions.\n\nOn the internet every millisecond counts,\nbut it is interesting to have your worker-servers at home just to envision the process.\n\nNormally, I wouldn't mention this, but this is how the modern CPU works,\nyou need to have multiple workers even in your smallest programs on your own workstation to take advantage of the CPU.\n\nBut notice how phone apps use the Phone CPU,\nand it is the worst CPU to use, it is slow, battery powered, and you need it for emergencies, and for answering the phone.\n\nAt the same time, if there was one large company trying to keep up with the processing power needed to make all the apps go,\nthey would need a large and complex operation.\n\nApps, that you pay for, burn up your own CPU and battery power,\nthey are not web applications, they are resilient, decoupled, distributed.\n\nThey are clearly a success,\nthey make the phone more useful.\n\nBut as far as complex Graphic User Interface applications go,\nput them on the desktop, at least at first.\n\nEven with the crazy restrictions that popular Desktop Operating Systems created,\nthe walled gardens, non-free developer networks a Desktop is still a good target.\n\nFor one, when you create a desktop application,\nit is not going to be instantly attacked by hacked computers.\n\nAnd if it is a good idea, like HyperCard was,\nyou can sell it for a good price.\n\nWhen developing for the Desktop should use a base like electron,\nor NW.js.\n\nThe big weakness of desktops,\nis that there are three incompatible operating systems, electron and NW.js, are actually cross platform and repair that problem.\n\nYou don't have to start Developing your application User Interface First,\nlearning programming relies on good ideas, not just what is possible, but also, what is good.\n\nFor example Smalltalk has a very consistent user interface that requires very little GUI programming,\nit is a good idea to write the non-GUI core of your program first, at the very least, to make it easily testable.\n\nIf you do like complex architecture, a well thought out Object Oriented Programming language can be useful,\neven better if you use Behavior Driven Development that describes your program core in a readable subset of English.\n\nThis is a good place to mention MobX and Redux and similar application state based approaches,\nwhere high level actions modify a non GUI model of your application.\n\nYou shouldn't let programming become complicated, though,\nlook at Apple's Siri, it is just chat; or filling out forms one line at a time.\n\nSiri combined with a program like MUD,\ncan start keeping track of context of conversations and learn and become more intelligent.\n\nFinally, I think the best type of a program is one that has two kind of users,\nthe end-user that enhance their program by making additional purchases, and plugin-creators that further expand your original program idea.\n\nThis isn't so much about creating something as toxic as in-game-purchases,\nbut rather developing the initial features of your program as if you were a third-party content creator.\n\nGiving your program life from inside out,\nall the way back from its most fundamental features.\n\nThis way you can upgrade your program, one board at a time,\nlike the Ship of Theseus.\n\n\n[Modern web]: https://www.youtube.com/watch?v=6ffUHK7o5yI\n[mix of several technologies]: https://www.youtube.com/watch?v=gT0Lh1eYk78\n[very overwhelming]: https://www.youtube.com/watch?v=s-pCNqqUbfI\n[web is unfortunately tough on all]: https://www.youtube.com/results?search_query=programmer+burnout\n[you don't actually have to know a programming language]: https://www.youtube.com/watch?v=wwbM63-LFD4\n[managing the creation of your program]: https://www.youtube.com/results?search_query=how+to+become+a+program+manager\n[far more powerful than writing it yourself]: https://www.fiverr.com/categories/programming-tech/web-programming-services/web-application?source=category_filters\n[Hosting on the web can involve a lot of complexity]: https://www.youtube.com/watch?v=H8K-Rg_7Tbo\n[operating system you pick]: https://www.youtube.com/watch?v=iox7fr7p5Hc\n[hosting company]: https://www.youtube.com/user/LinodeCloudHosting\n[owning a web server]: https://www.youtube.com/watch?v=wsh64rjnRas\n[automated tools scanning it for exploits]: https://www.youtube.com/watch?v=7pJKBL9x6bY\n[scanning]: https://www.youtube.com/watch?v=4imIIKEK5gc\n[Tor or VPN]: https://www.youtube.com/watch?v=U8pCRMrbSl4\n[honeypot]: https://www.youtube.com/watch?v=0WUaI2pNiPI\n[As far as web goes, you may wish to start with serverless functions]: https://www.youtube.com/watch?v=wWEID0d6wfo\n[go into a task queue]: https://www.youtube.com/watch?v=HAj7F37SfG8\n[this is how the modern CPU works]: https://www.youtube.com/watch?v=Iz0MFOKmmDY\n[Graphic User Interface]: https://www.youtube.com/watch?v=XIGSJshYb90\n[HyperCard]: https://www.youtube.com/watch?v=FquNpWdf9vg\n[electron]: https://www.youtube.com/watch?v=8YP_nOCO-4Q\n[NW.js]: https://www.youtube.com/watch?v=5UsGnjPYxLU\n[cross platform]: https://www.youtube.com/watch?v=TWFUSxqMJic\n[Smalltalk]: https://www.youtube.com/watch?v=JLPiMl8XUKU\n[Object Oriented Programming]: https://www.youtube.com/watch?v=T-HGdc8L-7w\n[Behavior Driven Development]: https://www.youtube.com/watch?v=JuWEQsE7Hlo\n[MobX and Redux]: https://www.youtube.com/watch?v=83v8cdvGfeA\n[Apple's Siri]: https://www.youtube.com/watch?v=OIn5DZU_NoA\n[MUD]: https://www.youtube.com/watch?v=QzvqSVgc2t4\n[Ship of Theseus]: https://www.youtube.com/watch?v=iVlIZJTwgyQ",
  "images": [],
  "links": [
    {
      "title": "Modern web",
      "url": "https://www.youtube.com/watch?v=6ffUHK7o5yI",
      "hostname": "www.youtube.com"
    },
    {
      "title": "mix of several technologies",
      "url": "https://www.youtube.com/watch?v=gT0Lh1eYk78",
      "hostname": "www.youtube.com"
    },
    {
      "title": "very overwhelming",
      "url": "https://www.youtube.com/watch?v=s-pCNqqUbfI",
      "hostname": "www.youtube.com"
    },
    {
      "title": "web is unfortunately tough on all",
      "url": "https://www.youtube.com/results?search_query=programmer+burnout",
      "hostname": "www.youtube.com"
    },
    {
      "title": "you don't actually have to know a programming language",
      "url": "https://www.youtube.com/watch?v=wwbM63-LFD4",
      "hostname": "www.youtube.com"
    },
    {
      "title": "managing the creation of your program",
      "url": "https://www.youtube.com/results?search_query=how+to+become+a+program+manager",
      "hostname": "www.youtube.com"
    },
    {
      "title": "far more powerful than writing it yourself",
      "url": "https://www.fiverr.com/categories/programming-tech/web-programming-services/web-application?source=category_filters",
      "hostname": "www.fiverr.com"
    },
    {
      "title": "Hosting on the web can involve a lot of complexity",
      "url": "https://www.youtube.com/watch?v=H8K-Rg_7Tbo",
      "hostname": "www.youtube.com"
    },
    {
      "title": "operating system you pick",
      "url": "https://www.youtube.com/watch?v=iox7fr7p5Hc",
      "hostname": "www.youtube.com"
    },
    {
      "title": "hosting company",
      "url": "https://www.youtube.com/user/LinodeCloudHosting",
      "hostname": "www.youtube.com"
    },
    {
      "title": "owning a web server",
      "url": "https://www.youtube.com/watch?v=wsh64rjnRas",
      "hostname": "www.youtube.com"
    },
    {
      "title": "automated tools scanning it for exploits",
      "url": "https://www.youtube.com/watch?v=7pJKBL9x6bY",
      "hostname": "www.youtube.com"
    },
    {
      "title": "scanning",
      "url": "https://www.youtube.com/watch?v=4imIIKEK5gc",
      "hostname": "www.youtube.com"
    },
    {
      "title": "Tor or VPN",
      "url": "https://www.youtube.com/watch?v=U8pCRMrbSl4",
      "hostname": "www.youtube.com"
    },
    {
      "title": "honeypot",
      "url": "https://www.youtube.com/watch?v=0WUaI2pNiPI",
      "hostname": "www.youtube.com"
    },
    {
      "title": "As far as web goes, you may wish to start with serverless functions",
      "url": "https://www.youtube.com/watch?v=wWEID0d6wfo",
      "hostname": "www.youtube.com"
    },
    {
      "title": "go into a task queue",
      "url": "https://www.youtube.com/watch?v=HAj7F37SfG8",
      "hostname": "www.youtube.com"
    },
    {
      "title": "this is how the modern CPU works",
      "url": "https://www.youtube.com/watch?v=Iz0MFOKmmDY",
      "hostname": "www.youtube.com"
    },
    {
      "title": "Graphic User Interface",
      "url": "https://www.youtube.com/watch?v=XIGSJshYb90",
      "hostname": "www.youtube.com"
    },
    {
      "title": "HyperCard",
      "url": "https://www.youtube.com/watch?v=FquNpWdf9vg",
      "hostname": "www.youtube.com"
    },
    {
      "title": "electron",
      "url": "https://www.youtube.com/watch?v=8YP_nOCO-4Q",
      "hostname": "www.youtube.com"
    },
    {
      "title": "NW.js",
      "url": "https://www.youtube.com/watch?v=5UsGnjPYxLU",
      "hostname": "www.youtube.com"
    },
    {
      "title": "cross platform",
      "url": "https://www.youtube.com/watch?v=TWFUSxqMJic",
      "hostname": "www.youtube.com"
    },
    {
      "title": "Smalltalk",
      "url": "https://www.youtube.com/watch?v=JLPiMl8XUKU",
      "hostname": "www.youtube.com"
    },
    {
      "title": "Object Oriented Programming",
      "url": "https://www.youtube.com/watch?v=T-HGdc8L-7w",
      "hostname": "www.youtube.com"
    },
    {
      "title": "Behavior Driven Development",
      "url": "https://www.youtube.com/watch?v=JuWEQsE7Hlo",
      "hostname": "www.youtube.com"
    },
    {
      "title": "MobX and Redux",
      "url": "https://www.youtube.com/watch?v=83v8cdvGfeA",
      "hostname": "www.youtube.com"
    },
    {
      "title": "Apple's Siri",
      "url": "https://www.youtube.com/watch?v=OIn5DZU_NoA",
      "hostname": "www.youtube.com"
    },
    {
      "title": "MUD",
      "url": "https://www.youtube.com/watch?v=QzvqSVgc2t4",
      "hostname": "www.youtube.com"
    },
    {
      "title": "Ship of Theseus",
      "url": "https://www.youtube.com/watch?v=iVlIZJTwgyQ",
      "hostname": "www.youtube.com"
    }
  ]
}