{
  "name": "furkies-purrkies-poetry-0925",
  "id": "furkies-purrkies-poetry-0925",
  "guid": "53829e74-faea-45e3-a3d3-c14244480d2f",
  "title": "A Simple Way To Become A Powerful Programmer; Or Learning Programming The Right Way",
  "date": "2022-09-12T02:24:39.414Z",
  "image": "poetry-0925-illustration.jpg",
  "artwork": "https://unsplash.com/photos/uIu2_j7QAsU",
  "audio": "poetry-0925.mp3",
  "html": "<div class=\"section\">\n  <p>Let me tell you in the first paragraph,<br>use a slow computer.</p>\n  <p>Slow computers are almost always single board computers (SBC),<br>little over the size of a credit card.</p>\n  <p>They should come in a kit an cost less than $200 dollars,<br>buy from the company that makes the kit, as others may be artificially inflating prices.</p>\n  <p>You should do your own research, but the computer that comes to my mind,<br>is called the Raspberry PI.</p>\n  <p>More specifically,<br>\"CanaKit Raspberry Pi 4 8GB EXTREME Kit\".</p>\n  <p>This is priced at $169.95,<br>I think that is somewhat fair, for a full kit that get a computer going.</p>\n  <p>You will need a monitor, these go for about $70,<br>but no more than $100.</p>\n  <p>The Raspberry PI 4 does support two monitors,<br>you don’t have to get them both at once, but the more room for terminals the better.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>When learning or just starting to get good at programming,<br>you are faced with multiple ways of accomplishing a task.</p>\n  <p>The Perl Monks often quoth Larry Wall,<br>\"Tim Toady\" spelled \"TMTOWTDI\", which means “There's More Than One Way To Do It”.</p>\n  <p>While that is true in a broader context,<br>to be good at programming you have to chose one of the fastest ways.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Even more important than having a way to develop a nose,<br>for efficient programming, by means of a computer than will tell you when you are wrong.</p>\n  <p>Is gaining this beautiful ability to see slow code,<br>just when you are starting out with your programming.</p>\n  <p>What a marvelous invention, this ability to navigate the programming world,<br>not by listening to others, but simply listening to whether or not the CPU fan comes on.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>More than that, you don’t really need a teacher here,<br>what could they possibly know that you can’t know better by being efficient on an slow SBC.</p>\n  <p>And speed matters, while desktop computers are getting faster,<br>the code that we write today is likely going to run on a starved virtual machine.</p>\n  <p>Over at some corporation, trying to squeeze every dollar,<br>for all the distributed code repositories, their build systems is what gets you.</p>\n  <p>With all these fast computers everywhere,<br>your build system is going to be charging you per second.</p>\n  <p>And while every second counts,<br>it is the people who don’t count them that lose.</p>\n  <p>An un-optimized clunky and confusing system,<br>not written with efficiency in mind, is a ticking time bomb.</p>\n  <p>Few extra equally inefficient additions,<br>will make the system come to a crawl - if you are lucky - mostly it is game over, try again.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>You maybe thinking to yourself, that you can rely on bench-marking,<br>on a speedy system, but that is always a lie.</p>\n  <p>Especially when you work hard and are always short on time,<br>a fast computer will constantly tempt you with shortcuts, or cake, as some call it.</p>\n  <p>A slow computer, is like having a responsible teacher,<br>staring at your every move.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>In closing,<br>I will give you some examples of efficient code.</p>\n  <p>Node streams, from the realm of node.js,<br>a modern JavaScript ecosystem for the server.</p>\n  <p>Allow you to process binary files in chunks,<br>when working with a large video file.</p>\n  <p>A slow computer will force you to stream the frames through your program,<br>you will never load the whole thing into memory.</p>\n  <p>This applies to working with text based data files as well,<br>you will structure your text or JSON so that you only consume one line at a time.</p>\n  <p>This allows you to save memory,<br>and prevents you from parsing the content all at once.</p>\n  <p>And because you are writing efficient code from scratch,<br>everything you do will be forward compatible with efficient processing.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>You don’t always need to save on the memory,<br>for one, in-memory databases with a log and periodic disc or card sync...</p>\n  <p>Are an efficient way to deal with frequently accessed data,<br>that may need generic methods for sorting.</p>\n  <p>There will be opportunities to simplify things,<br>that you will know to ignore, in order to protect the efficiency of your code.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Two examples of disasters, are the Java programming language,<br>not really related to modern JavaScript, which is just too slow to bother with on SBC’s.</p>\n  <p>And I remember an important government website crashing because it used,<br>an XML database, with XSLT style-sheets, and almost certainly ran on Java as well, though it could have been PHP.</p>\n  <p>I am assuming a company stepped in, an not only setup a memory cache server,<br>but also probably replaced the XML database with something that scales.</p>\n  <p>Both the memory cache server, and the replacement database,<br>would have been written by programmers aiming to write efficient code.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>If you are curious about scalability,<br>know that in a world that uses multiple computers on a network...</p>\n  <p>(Meaning that by adding more computers it can scale,<br>to handle higher processing loads)</p>\n  <p>You don’t write code that executes in your program,<br>but rather, post code to a central server, called a processing queue.</p>\n  <p>And then two dozen computers,<br>which you can simulate with $30 Raspbery PI Zero.</p>\n  <p>Check the task out, perform it, usually execute the function,<br>that ordinary runs in your program.</p>\n  <p>And check the result back into the processing queue,<br>which will notify your program of the task’s completion.</p>\n  <p>This kind of architecture is said to scale,<br>purely because you can throw more computers at it.</p>\n  <p>And thus without thinking,<br>increase the speed at which the jobs in the queue get processed.</p>\n  <p>If you are interested in experimenting with distributed processing,<br>I recommend the Open Source <a href=\"https://zeromq.org/\">ZeroMQ</a>.</p>\n  <p>Which will allow your networked workers talk to the queue,<br>and the queue back to the task posters.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Don’t try to become an efficient programmer just to get a good job,<br>the prestigious companies will almost certainly treat you like a nobody.</p>\n  <p>And will be unwilling to go over $500,000 per year,<br>a good and efficient programmers saves so much money that a $1,000,000 per year is a bargain.</p>\n  <p>But incompetence will always hope to cover your abilities with two coders,<br>and instead hire programmers with no interest in writing efficient code.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>Just like you are meant to find your meaning in a quest to become a Great Being,<br>by means of reliable self education, authentic and hard earned knowledge, and resulting wisdom.</p>\n  <p>You should also accept the responsibility for building your own company,<br>you can easily demonstrate to your investors why your systems are superior.</p>\n  <p>And earn more, as well as learn more,<br>the if you got a job at a prestigious company.</p>\n  <p>Don’t waste your time on hoop jumping and diplomas easily begotten,<br>by means of memorization and cramming.</p>\n  <p>Aim to learn for real,<br>because that is precisely what real life <strong>always</strong> demands.</p>\n</div>",
  "bootstrap": "<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Let me tell you in the first paragraph,<br>use a slow computer.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Slow computers are almost always single board computers (SBC),<br>little over the size of a credit card.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">They should come in a kit an cost less than $200 dollars,<br>buy from the company that makes the kit, as others may be artificially inflating prices.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You should do your own research, but the computer that comes to my mind,<br>is called the Raspberry PI.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">More specifically,<br>\"CanaKit Raspberry Pi 4 8GB EXTREME Kit\".</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This is priced at $169.95,<br>I think that is somewhat fair, for a full kit that get a computer going.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You will need a monitor, these go for about $70,<br>but no more than $100.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The Raspberry PI 4 does support two monitors,<br>you don’t have to get them both at once, but the more room for terminals the better.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">When learning or just starting to get good at programming,<br>you are faced with multiple ways of accomplishing a task.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The Perl Monks often quoth Larry Wall,<br>\"Tim Toady\" spelled \"TMTOWTDI\", which means “There's More Than One Way To Do It”.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">While that is true in a broader context,<br>to be good at programming you have to chose one of the fastest ways.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Even more important than having a way to develop a nose,<br>for efficient programming, by means of a computer than will tell you when you are wrong.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Is gaining this beautiful ability to see slow code,<br>just when you are starting out with your programming.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">What a marvelous invention, this ability to navigate the programming world,<br>not by listening to others, but simply listening to whether or not the CPU fan comes on.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">More than that, you don’t really need a teacher here,<br>what could they possibly know that you can’t know better by being efficient on an slow SBC.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And speed matters, while desktop computers are getting faster,<br>the code that we write today is likely going to run on a starved virtual machine.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Over at some corporation, trying to squeeze every dollar,<br>for all the distributed code repositories, their build systems is what gets you.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">With all these fast computers everywhere,<br>your build system is going to be charging you per second.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And while every second counts,<br>it is the people who don’t count them that lose.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">An un-optimized clunky and confusing system,<br>not written with efficiency in mind, is a ticking time bomb.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Few extra equally inefficient additions,<br>will make the system come to a crawl - if you are lucky - mostly it is game over, try again.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You maybe thinking to yourself, that you can rely on bench-marking,<br>on a speedy system, but that is always a lie.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Especially when you work hard and are always short on time,<br>a fast computer will constantly tempt you with shortcuts, or cake, as some call it.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">A slow computer, is like having a responsible teacher,<br>staring at your every move.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">In closing,<br>I will give you some examples of efficient code.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Node streams, from the realm of node.js,<br>a modern JavaScript ecosystem for the server.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Allow you to process binary files in chunks,<br>when working with a large video file.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">A slow computer will force you to stream the frames through your program,<br>you will never load the whole thing into memory.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This applies to working with text based data files as well,<br>you will structure your text or JSON so that you only consume one line at a time.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This allows you to save memory,<br>and prevents you from parsing the content all at once.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And because you are writing efficient code from scratch,<br>everything you do will be forward compatible with efficient processing.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You don’t always need to save on the memory,<br>for one, in-memory databases with a log and periodic disc or card sync...</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Are an efficient way to deal with frequently accessed data,<br>that may need generic methods for sorting.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">There will be opportunities to simplify things,<br>that you will know to ignore, in order to protect the efficiency of your code.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Two examples of disasters, are the Java programming language,<br>not really related to modern JavaScript, which is just too slow to bother with on SBC’s.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And I remember an important government website crashing because it used,<br>an XML database, with XSLT style-sheets, and almost certainly ran on Java as well, though it could have been PHP.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">I am assuming a company stepped in, an not only setup a memory cache server,<br>but also probably replaced the XML database with something that scales.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Both the memory cache server, and the replacement database,<br>would have been written by programmers aiming to write efficient code.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If you are curious about scalability,<br>know that in a world that uses multiple computers on a network...</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">(Meaning that by adding more computers it can scale,<br>to handle higher processing loads)</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You don’t write code that executes in your program,<br>but rather, post code to a central server, called a processing queue.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And then two dozen computers,<br>which you can simulate with $30 Raspbery PI Zero.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Check the task out, perform it, usually execute the function,<br>that ordinary runs in your program.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And check the result back into the processing queue,<br>which will notify your program of the task’s completion.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This kind of architecture is said to scale,<br>purely because you can throw more computers at it.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And thus without thinking,<br>increase the speed at which the jobs in the queue get processed.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If you are interested in experimenting with distributed processing,<br>I recommend the Open Source <a href=\"https://zeromq.org/\">ZeroMQ</a>.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Which will allow your networked workers talk to the queue,<br>and the queue back to the task posters.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Don’t try to become an efficient programmer just to get a good job,<br>the prestigious companies will almost certainly treat you like a nobody.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And will be unwilling to go over $500,000 per year,<br>a good and efficient programmers saves so much money that a $1,000,000 per year is a bargain.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But incompetence will always hope to cover your abilities with two coders,<br>and instead hire programmers with no interest in writing efficient code.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Just like you are meant to find your meaning in a quest to become a Great Being,<br>by means of reliable self education, authentic and hard earned knowledge, and resulting wisdom.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">You should also accept the responsibility for building your own company,<br>you can easily demonstrate to your investors why your systems are superior.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And earn more, as well as learn more,<br>the if you got a job at a prestigious company.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Don’t waste your time on hoop jumping and diplomas easily begotten,<br>by means of memorization and cramming.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Aim to learn for real,<br>because that is precisely what real life <strong>always</strong> demands.</div>\n  </div>\n</div>",
  "print": "<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Let me tell you in the first paragraph,<br>use a slow computer.</div>\n  <div class=\"paragraph\">Slow computers are almost always single board computers (SBC),<br>little over the size of a credit card.</div>\n  <div class=\"paragraph\">They should come in a kit an cost less than $200 dollars,<br>buy from the company that makes the kit, as others may be artificially inflating prices.</div>\n  <div class=\"paragraph\">You should do your own research, but the computer that comes to my mind,<br>is called the Raspberry PI.</div>\n  <div class=\"paragraph\">More specifically,<br>\"CanaKit Raspberry Pi 4 8GB EXTREME Kit\".</div>\n  <div class=\"paragraph\">This is priced at $169.95,<br>I think that is somewhat fair, for a full kit that get a computer going.</div>\n  <div class=\"paragraph\">You will need a monitor, these go for about $70,<br>but no more than $100.</div>\n  <div class=\"paragraph\">The Raspberry PI 4 does support two monitors,<br>you don’t have to get them both at once, but the more room for terminals the better.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">When learning or just starting to get good at programming,<br>you are faced with multiple ways of accomplishing a task.</div>\n  <div class=\"paragraph\">The Perl Monks often quoth Larry Wall,<br>\"Tim Toady\" spelled \"TMTOWTDI\", which means “There's More Than One Way To Do It”.</div>\n  <div class=\"paragraph\">While that is true in a broader context,<br>to be good at programming you have to chose one of the fastest ways.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Even more important than having a way to develop a nose,<br>for efficient programming, by means of a computer than will tell you when you are wrong.</div>\n  <div class=\"paragraph\">Is gaining this beautiful ability to see slow code,<br>just when you are starting out with your programming.</div>\n  <div class=\"paragraph\">What a marvelous invention, this ability to navigate the programming world,<br>not by listening to others, but simply listening to whether or not the CPU fan comes on.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">More than that, you don’t really need a teacher here,<br>what could they possibly know that you can’t know better by being efficient on an slow SBC.</div>\n  <div class=\"paragraph\">And speed matters, while desktop computers are getting faster,<br>the code that we write today is likely going to run on a starved virtual machine.</div>\n  <div class=\"paragraph\">Over at some corporation, trying to squeeze every dollar,<br>for all the distributed code repositories, their build systems is what gets you.</div>\n  <div class=\"paragraph\">With all these fast computers everywhere,<br>your build system is going to be charging you per second.</div>\n  <div class=\"paragraph\">And while every second counts,<br>it is the people who don’t count them that lose.</div>\n  <div class=\"paragraph\">An un-optimized clunky and confusing system,<br>not written with efficiency in mind, is a ticking time bomb.</div>\n  <div class=\"paragraph\">Few extra equally inefficient additions,<br>will make the system come to a crawl - if you are lucky - mostly it is game over, try again.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">You maybe thinking to yourself, that you can rely on bench-marking,<br>on a speedy system, but that is always a lie.</div>\n  <div class=\"paragraph\">Especially when you work hard and are always short on time,<br>a fast computer will constantly tempt you with shortcuts, or cake, as some call it.</div>\n  <div class=\"paragraph\">A slow computer, is like having a responsible teacher,<br>staring at your every move.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">In closing,<br>I will give you some examples of efficient code.</div>\n  <div class=\"paragraph\">Node streams, from the realm of node.js,<br>a modern JavaScript ecosystem for the server.</div>\n  <div class=\"paragraph\">Allow you to process binary files in chunks,<br>when working with a large video file.</div>\n  <div class=\"paragraph\">A slow computer will force you to stream the frames through your program,<br>you will never load the whole thing into memory.</div>\n  <div class=\"paragraph\">This applies to working with text based data files as well,<br>you will structure your text or JSON so that you only consume one line at a time.</div>\n  <div class=\"paragraph\">This allows you to save memory,<br>and prevents you from parsing the content all at once.</div>\n  <div class=\"paragraph\">And because you are writing efficient code from scratch,<br>everything you do will be forward compatible with efficient processing.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">You don’t always need to save on the memory,<br>for one, in-memory databases with a log and periodic disc or card sync...</div>\n  <div class=\"paragraph\">Are an efficient way to deal with frequently accessed data,<br>that may need generic methods for sorting.</div>\n  <div class=\"paragraph\">There will be opportunities to simplify things,<br>that you will know to ignore, in order to protect the efficiency of your code.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Two examples of disasters, are the Java programming language,<br>not really related to modern JavaScript, which is just too slow to bother with on SBC’s.</div>\n  <div class=\"paragraph\">And I remember an important government website crashing because it used,<br>an XML database, with XSLT style-sheets, and almost certainly ran on Java as well, though it could have been PHP.</div>\n  <div class=\"paragraph\">I am assuming a company stepped in, an not only setup a memory cache server,<br>but also probably replaced the XML database with something that scales.</div>\n  <div class=\"paragraph\">Both the memory cache server, and the replacement database,<br>would have been written by programmers aiming to write efficient code.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">If you are curious about scalability,<br>know that in a world that uses multiple computers on a network...</div>\n  <div class=\"paragraph\">(Meaning that by adding more computers it can scale,<br>to handle higher processing loads)</div>\n  <div class=\"paragraph\">You don’t write code that executes in your program,<br>but rather, post code to a central server, called a processing queue.</div>\n  <div class=\"paragraph\">And then two dozen computers,<br>which you can simulate with $30 Raspbery PI Zero.</div>\n  <div class=\"paragraph\">Check the task out, perform it, usually execute the function,<br>that ordinary runs in your program.</div>\n  <div class=\"paragraph\">And check the result back into the processing queue,<br>which will notify your program of the task’s completion.</div>\n  <div class=\"paragraph\">This kind of architecture is said to scale,<br>purely because you can throw more computers at it.</div>\n  <div class=\"paragraph\">And thus without thinking,<br>increase the speed at which the jobs in the queue get processed.</div>\n  <div class=\"paragraph\">If you are interested in experimenting with distributed processing,<br>I recommend the Open Source <span>ZeroMQ<sup>[1]</sup></span>.</div>\n  <div class=\"paragraph\">Which will allow your networked workers talk to the queue,<br>and the queue back to the task posters.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Don’t try to become an efficient programmer just to get a good job,<br>the prestigious companies will almost certainly treat you like a nobody.</div>\n  <div class=\"paragraph\">And will be unwilling to go over $500,000 per year,<br>a good and efficient programmers saves so much money that a $1,000,000 per year is a bargain.</div>\n  <div class=\"paragraph\">But incompetence will always hope to cover your abilities with two coders,<br>and instead hire programmers with no interest in writing efficient code.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Just like you are meant to find your meaning in a quest to become a Great Being,<br>by means of reliable self education, authentic and hard earned knowledge, and resulting wisdom.</div>\n  <div class=\"paragraph\">You should also accept the responsibility for building your own company,<br>you can easily demonstrate to your investors why your systems are superior.</div>\n  <div class=\"paragraph\">And earn more, as well as learn more,<br>the if you got a job at a prestigious company.</div>\n  <div class=\"paragraph\">Don’t waste your time on hoop jumping and diplomas easily begotten,<br>by means of memorization and cramming.</div>\n  <div class=\"paragraph\">Aim to learn for real,<br>because that is precisely what real life <strong>always</strong> demands.</div>\n</div>\n<div class=\"break-after\">&nbsp;</div>\n<div>\n  <div class=\"section\" style=\"padding-bottom: 1rem;\">References</div>\n  <div>[1]: https://zeromq.org/</div>\n</div>",
  "text": "Let me tell you in the first paragraph,\nuse a slow computer.\nSlow computers are almost always single board computers (SBC),\nlittle over the size of a credit card.\nThey should come in a kit an cost less than $200 dollars,\nbuy from the company that makes the kit, as others may be artificially inflating prices.\nYou should do your own research, but the computer that comes to my mind,\nis called the Raspberry PI.\nMore specifically,\n\"CanaKit Raspberry Pi 4 8GB EXTREME Kit\".\nThis is priced at $169.95,\nI think that is somewhat fair, for a full kit that get a computer going.\nYou will need a monitor, these go for about $70,\nbut no more than $100.\nThe Raspberry PI 4 does support two monitors,\nyou don’t have to get them both at once, but the more room for terminals the better.\n\nWhen learning or just starting to get good at programming,\nyou are faced with multiple ways of accomplishing a task.\nThe Perl Monks often quoth Larry Wall,\n\"Tim Toady\" spelled \"TMTOWTDI\", which means “There's More Than One Way To Do It”.\nWhile that is true in a broader context,\nto be good at programming you have to chose one of the fastest ways.\n\nEven more important than having a way to develop a nose,\nfor efficient programming, by means of a computer than will tell you when you are wrong.\nIs gaining this beautiful ability to see slow code,\njust when you are starting out with your programming.\nWhat a marvelous invention, this ability to navigate the programming world,\nnot by listening to others, but simply listening to whether or not the CPU fan comes on.\n\nMore than that, you don’t really need a teacher here,\nwhat could they possibly know that you can’t know better by being efficient on an slow SBC.\nAnd speed matters, while desktop computers are getting faster,\nthe code that we write today is likely going to run on a starved virtual machine.\nOver at some corporation, trying to squeeze every dollar,\nfor all the distributed code repositories, their build systems is what gets you.\nWith all these fast computers everywhere,\nyour build system is going to be charging you per second.\nAnd while every second counts,\nit is the people who don’t count them that lose.\nAn un-optimized clunky and confusing system,\nnot written with efficiency in mind, is a ticking time bomb.\nFew extra equally inefficient additions,\nwill make the system come to a crawl - if you are lucky - mostly it is game over, try again.\n\nYou maybe thinking to yourself, that you can rely on bench-marking,\non a speedy system, but that is always a lie.\nEspecially when you work hard and are always short on time,\na fast computer will constantly tempt you with shortcuts, or cake, as some call it.\nA slow computer, is like having a responsible teacher,\nstaring at your every move.\n\nIn closing,\nI will give you some examples of efficient code.\nNode streams, from the realm of node.js,\na modern JavaScript ecosystem for the server.\nAllow you to process binary files in chunks,\nwhen working with a large video file.\nA slow computer will force you to stream the frames through your program,\nyou will never load the whole thing into memory.\nThis applies to working with text based data files as well,\nyou will structure your text or JSON so that you only consume one line at a time.\nThis allows you to save memory,\nand prevents you from parsing the content all at once.\nAnd because you are writing efficient code from scratch,\neverything you do will be forward compatible with efficient processing.\n\nYou don’t always need to save on the memory,\nfor one, in-memory databases with a log and periodic disc or card sync...\nAre an efficient way to deal with frequently accessed data,\nthat may need generic methods for sorting.\nThere will be opportunities to simplify things,\nthat you will know to ignore, in order to protect the efficiency of your code.\n\nTwo examples of disasters, are the Java programming language,\nnot really related to modern JavaScript, which is just too slow to bother with on SBC’s.\nAnd I remember an important government website crashing because it used,\nan XML database, with XSLT style-sheets, and almost certainly ran on Java as well, though it could have been PHP.\nI am assuming a company stepped in, an not only setup a memory cache server,\nbut also probably replaced the XML database with something that scales.\nBoth the memory cache server, and the replacement database,\nwould have been written by programmers aiming to write efficient code.\n\nIf you are curious about scalability,\nknow that in a world that uses multiple computers on a network...\n(Meaning that by adding more computers it can scale,\nto handle higher processing loads)\nYou don’t write code that executes in your program,\nbut rather, post code to a central server, called a processing queue.\nAnd then two dozen computers,\nwhich you can simulate with $30 Raspbery PI Zero.\nCheck the task out, perform it, usually execute the function,\nthat ordinary runs in your program.\nAnd check the result back into the processing queue,\nwhich will notify your program of the task’s completion.\nThis kind of architecture is said to scale,\npurely because you can throw more computers at it.\nAnd thus without thinking,\nincrease the speed at which the jobs in the queue get processed.\nIf you are interested in experimenting with distributed processing,\nI recommend the Open Source ZeroMQ[1].\nWhich will allow your networked workers talk to the queue,\nand the queue back to the task posters.\n\nDon’t try to become an efficient programmer just to get a good job,\nthe prestigious companies will almost certainly treat you like a nobody.\nAnd will be unwilling to go over $500,000 per year,\na good and efficient programmers saves so much money that a $1,000,000 per year is a bargain.\nBut incompetence will always hope to cover your abilities with two coders,\nand instead hire programmers with no interest in writing efficient code.\n\nJust like you are meant to find your meaning in a quest to become a Great Being,\nby means of reliable self education, authentic and hard earned knowledge, and resulting wisdom.\nYou should also accept the responsibility for building your own company,\nyou can easily demonstrate to your investors why your systems are superior.\nAnd earn more, as well as learn more,\nthe if you got a job at a prestigious company.\nDon’t waste your time on hoop jumping and diplomas easily begotten,\nby means of memorization and cramming.\nAim to learn for real,\nbecause that is precisely what real life always demands.\n \nReferences\n[1]: https://zeromq.org/",
  "images": [],
  "links": [
    {
      "title": "ZeroMQ",
      "url": "https://zeromq.org/",
      "hostname": "zeromq.org"
    }
  ]
}