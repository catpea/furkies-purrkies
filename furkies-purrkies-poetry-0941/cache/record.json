{
  "name": "furkies-purrkies-poetry-0941",
  "id": "furkies-purrkies-poetry-0941",
  "guid": "8de69bc9-2ea7-41bf-8232-b96b8389390a",
  "title": "On Windows Into Computer Programs",
  "date": "2022-09-27T22:04:33.618Z",
  "image": "poetry-0941-illustration.jpg",
  "artwork": "https://unsplash.com/photos/l090uFWoPaI",
  "audio": "poetry-0941.mp3",
  "html": "<div class=\"section\">\n  <p>I spent the afternoon writing a tiny HTTP server,<br>that can route requests from multiple domain names pointed at it.</p>\n  <p>It is just 25 lines of code,<br>and maybe another 50 in reusable functions.</p>\n  <p>It has good code readability,<br>but not because I took extra time to clean it, which I did.</p>\n  <p>But because it is a program,<br>that just does one thing well.</p>\n  <p>This is often quoted,<br>as the UNIX way.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>It is a strange thing to talk about,<br>and a strange revelation.</p>\n  <p>But large programs simply cannot be readable,<br>unless they are built out of multiple small commands.</p>\n  <p>Writing tiny commands,<br>to operate a larger system.</p>\n  <p>It not just for operating system,<br>but the way to do large programs right.</p>\n  <p>As a bonus,<br>a person is then able to log into a large program...</p>\n  <p>And manipulate it,<br>inside out.</p>\n  <p>This allows for new types of tests,<br>and viewing the program from a new perspective.</p>\n  <p>Which allows for inviting multiple programmers,<br>to work on the program command at a time, inside out.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>I suppose the data storage,<br>must always be tables that can be joined on some common field, like userid.</p>\n  <p>But if it is an unusual program,<br>then the commands should operate on a tree of locations.</p>\n  <p>Not exactly a tree of folders,<br>but just a tree of infinitely nestable locations.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>I think all concerns such as code quality, or portability,<br>or readability, even technology is secondary...</p>\n  <p>To being able to replace the program,<br>inside out, one command at a time.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>All of these patterns are with us,<br>they are databases, file systems, commands.</p>\n  <p>They are here, not because,<br>that is how data and operating systems need.</p>\n  <p>But because <strong>THAT</strong> is how programs that last,<br>are written.</p>\n</div>",
  "bootstrap": "<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">I spent the afternoon writing a tiny HTTP server,<br>that can route requests from multiple domain names pointed at it.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is just 25 lines of code,<br>and maybe another 50 in reusable functions.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It has good code readability,<br>but not because I took extra time to clean it, which I did.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But because it is a program,<br>that just does one thing well.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This is often quoted,<br>as the UNIX way.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is a strange thing to talk about,<br>and a strange revelation.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But large programs simply cannot be readable,<br>unless they are built out of multiple small commands.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Writing tiny commands,<br>to operate a larger system.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It not just for operating system,<br>but the way to do large programs right.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">As a bonus,<br>a person is then able to log into a large program...</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And manipulate it,<br>inside out.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This allows for new types of tests,<br>and viewing the program from a new perspective.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Which allows for inviting multiple programmers,<br>to work on the program command at a time, inside out.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">I suppose the data storage,<br>must always be tables that can be joined on some common field, like userid.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But if it is an unusual program,<br>then the commands should operate on a tree of locations.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Not exactly a tree of folders,<br>but just a tree of infinitely nestable locations.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">I think all concerns such as code quality, or portability,<br>or readability, even technology is secondary...</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">To being able to replace the program,<br>inside out, one command at a time.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">All of these patterns are with us,<br>they are databases, file systems, commands.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">They are here, not because,<br>that is how data and operating systems need.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But because <strong>THAT</strong> is how programs that last,<br>are written.</div>\n  </div>\n</div>",
  "print": "<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">I spent the afternoon writing a tiny HTTP server,<br>that can route requests from multiple domain names pointed at it.</div>\n  <div class=\"paragraph\">It is just 25 lines of code,<br>and maybe another 50 in reusable functions.</div>\n  <div class=\"paragraph\">It has good code readability,<br>but not because I took extra time to clean it, which I did.</div>\n  <div class=\"paragraph\">But because it is a program,<br>that just does one thing well.</div>\n  <div class=\"paragraph\">This is often quoted,<br>as the UNIX way.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">It is a strange thing to talk about,<br>and a strange revelation.</div>\n  <div class=\"paragraph\">But large programs simply cannot be readable,<br>unless they are built out of multiple small commands.</div>\n  <div class=\"paragraph\">Writing tiny commands,<br>to operate a larger system.</div>\n  <div class=\"paragraph\">It not just for operating system,<br>but the way to do large programs right.</div>\n  <div class=\"paragraph\">As a bonus,<br>a person is then able to log into a large program...</div>\n  <div class=\"paragraph\">And manipulate it,<br>inside out.</div>\n  <div class=\"paragraph\">This allows for new types of tests,<br>and viewing the program from a new perspective.</div>\n  <div class=\"paragraph\">Which allows for inviting multiple programmers,<br>to work on the program command at a time, inside out.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">I suppose the data storage,<br>must always be tables that can be joined on some common field, like userid.</div>\n  <div class=\"paragraph\">But if it is an unusual program,<br>then the commands should operate on a tree of locations.</div>\n  <div class=\"paragraph\">Not exactly a tree of folders,<br>but just a tree of infinitely nestable locations.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">I think all concerns such as code quality, or portability,<br>or readability, even technology is secondary...</div>\n  <div class=\"paragraph\">To being able to replace the program,<br>inside out, one command at a time.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">All of these patterns are with us,<br>they are databases, file systems, commands.</div>\n  <div class=\"paragraph\">They are here, not because,<br>that is how data and operating systems need.</div>\n  <div class=\"paragraph\">But because <strong>THAT</strong> is how programs that last,<br>are written.</div>\n</div>",
  "text": "I spent the afternoon writing a tiny HTTP server,\nthat can route requests from multiple domain names pointed at it.\nIt is just 25 lines of code,\nand maybe another 50 in reusable functions.\nIt has good code readability,\nbut not because I took extra time to clean it, which I did.\nBut because it is a program,\nthat just does one thing well.\nThis is often quoted,\nas the UNIX way.\n\nIt is a strange thing to talk about,\nand a strange revelation.\nBut large programs simply cannot be readable,\nunless they are built out of multiple small commands.\nWriting tiny commands,\nto operate a larger system.\nIt not just for operating system,\nbut the way to do large programs right.\nAs a bonus,\na person is then able to log into a large program...\nAnd manipulate it,\ninside out.\nThis allows for new types of tests,\nand viewing the program from a new perspective.\nWhich allows for inviting multiple programmers,\nto work on the program command at a time, inside out.\n\nI suppose the data storage,\nmust always be tables that can be joined on some common field, like userid.\nBut if it is an unusual program,\nthen the commands should operate on a tree of locations.\nNot exactly a tree of folders,\nbut just a tree of infinitely nestable locations.\n\nI think all concerns such as code quality, or portability,\nor readability, even technology is secondary...\nTo being able to replace the program,\ninside out, one command at a time.\n\nAll of these patterns are with us,\nthey are databases, file systems, commands.\nThey are here, not because,\nthat is how data and operating systems need.\nBut because THAT is how programs that last,\nare written.",
  "images": [],
  "links": []
}