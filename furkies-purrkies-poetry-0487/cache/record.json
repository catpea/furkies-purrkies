{
  "name": "furkies-purrkies-poetry-0487",
  "id": "furkies-purrkies-poetry-0487",
  "title": "Bird Attacks And Speeding Up Your Workout Music: A Linux Command Line Tutorial",
  "date": "2021-07-01T02:40:35.825Z",
  "image": "poetry-0487-illustration.jpg",
  "artwork": "https://example.com",
  "audio": "poetry-0487.mp3",
  "html": "<div class=\"section\">\n  <p>Upon a tiny bicycle adventure,<br>asking myself how to approach the subject of workout music and linux.</p>\n  <p>While I was contemplating an introduction to linux,<br>and the many steps required along the way...</p>\n  <p><a href=\"https://www.youtube.com/watch?v=gWGiWHwmhhc\">A little bird swooped down and tried to carry me away</a>,<br>apparently this was exactly what I needed.</p>\n  <p>In the moment I was pedaling on my bicycle,<br>and a little bird was camping on top of my head, hopefully merely attacking.</p>\n  <p>I realized all I need to say about UNIX and Linux in this poem,<br>is that I have been speeding up my workout music, and explain the command I use to do it.</p>\n  <p>As the bird let go, and I started waiving frantically above my head,<br>so that it doesn't come back again.</p>\n  <p>I felt that I should mention that it is probably best to buy a cheap dedicated Linux computer,<br>a <a href=\"https://www.canakit.com/raspberry-pi-4-complete-starter-kit.html\">Raspberry PI</a> costs $140 dollars, and a monitor runs about $70.</p>\n  <p>It is not very fast, but web pages load OK,<br>and it is a proper Linux with a proper terminal application where you can type commands.</p>\n  <p>Installing ffmpeg should only require running <code>sudo apt-get install ffmpeg</code><br>Raspberry Pi Documentation has some useful information about <a href=\"https://www.raspberrypi.org/documentation/linux/software/apt.md\">APT</a></p>\n  <p>If the command does not work out, which doesn't really happen,<br>then you have to search for <a href=\"https://www.google.com/search?q=How+to+install+ffmpeg+on+Raspberry+PI\">\"How to install ffmpeg on Raspberry PI\"</a> and begin your Linux adventure here.</p>\n  <p>But using apt is easy, and you will soon have ffmpeg on your system,<br>you'll have to copy your music onto the PI.</p>\n  <p>And from now on I will refer to your favorite song as: \"original-song.mp3\",<br>and the song that we will speed up will be called \"spedup-song.mp3\"</p>\n  <p>There are three parts to this command,<br>and it all begins by saying <code>ffmpeg</code> to tell the system you will be using the ffmpeg program.</p>\n  <p>Then the developers behind ffmpeg decided that you should use -i<br>to tell ffmpeg of any input files so you have to say <code>-i original-song.mp3</code></p>\n  <p>This is called giving a command an argument,<br>we are giving it the -i argument with the value of original-song.mp3.</p>\n  <p>Next, we say <code>-af atempo=1.25</code> so we are giving ffmpeg the -af argument,<br>which is short for audio filter, and then we specify the filter which is atempo.</p>\n  <p><a href=\"https://ffmpeg.org/ffmpeg-filters.html#atempo\">atempo</a> stands for \"Adjust audio tempo\" but the syntax that follows -af,<br>is something that ffmpeg programmers picked to try to make things easy.</p>\n  <p>In this case atempo is followed by equal sign,<br>which means assign value, and the value we are assigning is 1.25</p>\n  <p>This is so hard to grasp at first, because ffmpeg programmers,<br>really struggled with how to make all this somewhat readable, and useful.</p>\n  <p>1.25 is a programmers way of saying set the tempo to 125%,<br>the math is easier this way, an everyone just does it.</p>\n  <p>So if you wanted to speed up your song to 150% tempo, you would say, atempo=1.50,<br>and if you wanted to slow it down to 50% tempo, you would say atempo=0.50</p>\n  <p>At this point we just give ffmpeg the filename we want to save the changes to,<br>which in this tutorial is spedup-song.mp3.</p>\n  <p>So the whole command reads like this:<br><code>ffmpeg -i original-song.mp3 -af atempo=1.25 spedup-song.mp3;</code></p>\n  <p>The biggest thing to learn from all this,<br>is that programmers are trying to be useful, and they are very thrifty.</p>\n  <p>The operating system has no idea where or what atempo is,<br>that is just part of ffmpeg, and its own world of complexity.</p>\n  <p>As to the command line,<br><a href=\"https://www.youtube.com/watch?v=tc4ROCJYbm0\">the command line is trying to be useful</a></p>\n  <p>It is just command names and arguments,<br>and developers trying to make commands useful.</p>\n  <p>It is faster to do things on the command line,<br>just imagine how many clicks you would have to make in a Graphic User Interface application.</p>\n  <p>As to not knowing what the commands are,<br>nobody knows them at first, you just write them down, and eventually memorize them.</p>\n</div>\n<div class=\"section\">\n  <hr>\n</div>\n<div class=\"section\">\n  <p>In Closing,<br>I will speed up one of my songs to let you hear the difference.</p>\n  <p>Here is the original speed,<br>(audio plays)</p>\n  <p>And here is the version, that is sped up to 125% tempo.<br>(audio plays)</p>\n  <p>The overall lesson to take from all this, is that command line is not scary, but it will take a Linux, and some notes to get used to it.<br>and if you are ever bicycling among angry birds, bring an emergency hat.</p>\n</div>",
  "bootstrap": "<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Upon a tiny bicycle adventure,<br>asking myself how to approach the subject of workout music and linux.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">While I was contemplating an introduction to linux,<br>and the many steps required along the way...</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\"><a href=\"https://www.youtube.com/watch?v=gWGiWHwmhhc\">A little bird swooped down and tried to carry me away</a>,<br>apparently this was exactly what I needed.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">In the moment I was pedaling on my bicycle,<br>and a little bird was camping on top of my head, hopefully merely attacking.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">I realized all I need to say about UNIX and Linux in this poem,<br>is that I have been speeding up my workout music, and explain the command I use to do it.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">As the bird let go, and I started waiving frantically above my head,<br>so that it doesn't come back again.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">I felt that I should mention that it is probably best to buy a cheap dedicated Linux computer,<br>a <a href=\"https://www.canakit.com/raspberry-pi-4-complete-starter-kit.html\">Raspberry PI</a> costs $140 dollars, and a monitor runs about $70.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is not very fast, but web pages load OK,<br>and it is a proper Linux with a proper terminal application where you can type commands.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Installing ffmpeg should only require running <code>sudo apt-get install ffmpeg</code><br>Raspberry Pi Documentation has some useful information about <a href=\"https://www.raspberrypi.org/documentation/linux/software/apt.md\">APT</a></div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">If the command does not work out, which doesn't really happen,<br>then you have to search for <a href=\"https://www.google.com/search?q=How+to+install+ffmpeg+on+Raspberry+PI\">\"How to install ffmpeg on Raspberry PI\"</a> and begin your Linux adventure here.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">But using apt is easy, and you will soon have ffmpeg on your system,<br>you'll have to copy your music onto the PI.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And from now on I will refer to your favorite song as: \"original-song.mp3\",<br>and the song that we will speed up will be called \"spedup-song.mp3\"</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">There are three parts to this command,<br>and it all begins by saying <code>ffmpeg</code> to tell the system you will be using the ffmpeg program.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Then the developers behind ffmpeg decided that you should use -i<br>to tell ffmpeg of any input files so you have to say <code>-i original-song.mp3</code></div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This is called giving a command an argument,<br>we are giving it the -i argument with the value of original-song.mp3.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Next, we say <code>-af atempo=1.25</code> so we are giving ffmpeg the -af argument,<br>which is short for audio filter, and then we specify the filter which is atempo.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\"><a href=\"https://ffmpeg.org/ffmpeg-filters.html#atempo\">atempo</a> stands for \"Adjust audio tempo\" but the syntax that follows -af,<br>is something that ffmpeg programmers picked to try to make things easy.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">In this case atempo is followed by equal sign,<br>which means assign value, and the value we are assigning is 1.25</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">This is so hard to grasp at first, because ffmpeg programmers,<br>really struggled with how to make all this somewhat readable, and useful.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">1.25 is a programmers way of saying set the tempo to 125%,<br>the math is easier this way, an everyone just does it.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">So if you wanted to speed up your song to 150% tempo, you would say, atempo=1.50,<br>and if you wanted to slow it down to 50% tempo, you would say atempo=0.50</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">At this point we just give ffmpeg the filename we want to save the changes to,<br>which in this tutorial is spedup-song.mp3.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">So the whole command reads like this:<br><code>ffmpeg -i original-song.mp3 -af atempo=1.25 spedup-song.mp3;</code></div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The biggest thing to learn from all this,<br>is that programmers are trying to be useful, and they are very thrifty.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The operating system has no idea where or what atempo is,<br>that is just part of ffmpeg, and its own world of complexity.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">As to the command line,<br><a href=\"https://www.youtube.com/watch?v=tc4ROCJYbm0\">the command line is trying to be useful</a></div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is just command names and arguments,<br>and developers trying to make commands useful.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">It is faster to do things on the command line,<br>just imagine how many clicks you would have to make in a Graphic User Interface application.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">As to not knowing what the commands are,<br>nobody knows them at first, you just write them down, and eventually memorize them.</div>\n  </div>\n</div>\n<div class=\"mb-5 section-spacer\">&nbsp;</div>\n<div class=\"card card-section bg-dark text-warning shadow\">\n  <div class=\"section card-body mb-0 my-2\">\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">In Closing,<br>I will speed up one of my songs to let you hear the difference.</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">Here is the original speed,<br>(audio plays)</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">And here is the version, that is sped up to 125% tempo.<br>(audio plays)</div>\n    <div class=\"paragraph card-text card-stanza my-5 text-center\">The overall lesson to take from all this, is that command line is not scary, but it will take a Linux, and some notes to get used to it.<br>and if you are ever bicycling among angry birds, bring an emergency hat.</div>\n  </div>\n</div>",
  "print": "<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">Upon a tiny bicycle adventure,<br>asking myself how to approach the subject of workout music and linux.</div>\n  <div class=\"paragraph\">While I was contemplating an introduction to linux,<br>and the many steps required along the way...</div>\n  <div class=\"paragraph\"><span>A little bird swooped down and tried to carry me away<sup>[1]</sup></span>,<br>apparently this was exactly what I needed.</div>\n  <div class=\"paragraph\">In the moment I was pedaling on my bicycle,<br>and a little bird was camping on top of my head, hopefully merely attacking.</div>\n  <div class=\"paragraph\">I realized all I need to say about UNIX and Linux in this poem,<br>is that I have been speeding up my workout music, and explain the command I use to do it.</div>\n  <div class=\"paragraph\">As the bird let go, and I started waiving frantically above my head,<br>so that it doesn't come back again.</div>\n  <div class=\"paragraph\">I felt that I should mention that it is probably best to buy a cheap dedicated Linux computer,<br>a <span>Raspberry PI<sup>[2]</sup></span> costs $140 dollars, and a monitor runs about $70.</div>\n  <div class=\"paragraph\">It is not very fast, but web pages load OK,<br>and it is a proper Linux with a proper terminal application where you can type commands.</div>\n  <div class=\"paragraph\">Installing ffmpeg should only require running <code>sudo apt-get install ffmpeg</code><br>Raspberry Pi Documentation has some useful information about <span>APT<sup>[3]</sup></span></div>\n  <div class=\"paragraph\">If the command does not work out, which doesn't really happen,<br>then you have to search for <span>\"How to install ffmpeg on Raspberry PI\"<sup>[4]</sup></span> and begin your Linux adventure here.</div>\n  <div class=\"paragraph\">But using apt is easy, and you will soon have ffmpeg on your system,<br>you'll have to copy your music onto the PI.</div>\n  <div class=\"paragraph\">And from now on I will refer to your favorite song as: \"original-song.mp3\",<br>and the song that we will speed up will be called \"spedup-song.mp3\"</div>\n  <div class=\"paragraph\">There are three parts to this command,<br>and it all begins by saying <code>ffmpeg</code> to tell the system you will be using the ffmpeg program.</div>\n  <div class=\"paragraph\">Then the developers behind ffmpeg decided that you should use -i<br>to tell ffmpeg of any input files so you have to say <code>-i original-song.mp3</code></div>\n  <div class=\"paragraph\">This is called giving a command an argument,<br>we are giving it the -i argument with the value of original-song.mp3.</div>\n  <div class=\"paragraph\">Next, we say <code>-af atempo=1.25</code> so we are giving ffmpeg the -af argument,<br>which is short for audio filter, and then we specify the filter which is atempo.</div>\n  <div class=\"paragraph\"><span>atempo<sup>[5]</sup></span> stands for \"Adjust audio tempo\" but the syntax that follows -af,<br>is something that ffmpeg programmers picked to try to make things easy.</div>\n  <div class=\"paragraph\">In this case atempo is followed by equal sign,<br>which means assign value, and the value we are assigning is 1.25</div>\n  <div class=\"paragraph\">This is so hard to grasp at first, because ffmpeg programmers,<br>really struggled with how to make all this somewhat readable, and useful.</div>\n  <div class=\"paragraph\">1.25 is a programmers way of saying set the tempo to 125%,<br>the math is easier this way, an everyone just does it.</div>\n  <div class=\"paragraph\">So if you wanted to speed up your song to 150% tempo, you would say, atempo=1.50,<br>and if you wanted to slow it down to 50% tempo, you would say atempo=0.50</div>\n  <div class=\"paragraph\">At this point we just give ffmpeg the filename we want to save the changes to,<br>which in this tutorial is spedup-song.mp3.</div>\n  <div class=\"paragraph\">So the whole command reads like this:<br><code>ffmpeg -i original-song.mp3 -af atempo=1.25 spedup-song.mp3;</code></div>\n  <div class=\"paragraph\">The biggest thing to learn from all this,<br>is that programmers are trying to be useful, and they are very thrifty.</div>\n  <div class=\"paragraph\">The operating system has no idea where or what atempo is,<br>that is just part of ffmpeg, and its own world of complexity.</div>\n  <div class=\"paragraph\">As to the command line,<br><span>the command line is trying to be useful<sup>[6]</sup></span></div>\n  <div class=\"paragraph\">It is just command names and arguments,<br>and developers trying to make commands useful.</div>\n  <div class=\"paragraph\">It is faster to do things on the command line,<br>just imagine how many clicks you would have to make in a Graphic User Interface application.</div>\n  <div class=\"paragraph\">As to not knowing what the commands are,<br>nobody knows them at first, you just write them down, and eventually memorize them.</div>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <br>\n</div>\n<div class=\"section avoid-break-inside\" style=\"padding-bottom: 2rem;\">\n  <div class=\"paragraph\">In Closing,<br>I will speed up one of my songs to let you hear the difference.</div>\n  <div class=\"paragraph\">Here is the original speed,<br>(audio plays)</div>\n  <div class=\"paragraph\">And here is the version, that is sped up to 125% tempo.<br>(audio plays)</div>\n  <div class=\"paragraph\">The overall lesson to take from all this, is that command line is not scary, but it will take a Linux, and some notes to get used to it.<br>and if you are ever bicycling among angry birds, bring an emergency hat.</div>\n</div>\n<div class=\"break-after\">&nbsp;</div>\n<div>\n  <div class=\"section\" style=\"padding-bottom: 1rem;\">References</div>\n  <div>[1]: https://www.youtube.com/watch?v=gWGiWHwmhhc</div>\n  <div>[2]: https://www.canakit.com/raspberry-pi-4-complete-starter-kit.html</div>\n  <div>[3]: https://www.raspberrypi.org/documentation/linux/software/apt.md</div>\n  <div>[4]: https://www.google.com/search?q=How+to+install+ffmpeg+on+Raspberry+PI</div>\n  <div>[5]: https://ffmpeg.org/ffmpeg-filters.html#atempo</div>\n  <div>[6]: https://www.youtube.com/watch?v=tc4ROCJYbm0</div>\n</div>",
  "text": "Upon a tiny bicycle adventure,\nasking myself how to approach the subject of workout music and linux.\nWhile I was contemplating an introduction to linux,\nand the many steps required along the way...\nA little bird swooped down and tried to carry me away[1],\napparently this was exactly what I needed.\nIn the moment I was pedaling on my bicycle,\nand a little bird was camping on top of my head, hopefully merely attacking.\nI realized all I need to say about UNIX and Linux in this poem,\nis that I have been speeding up my workout music, and explain the command I use to do it.\nAs the bird let go, and I started waiving frantically above my head,\nso that it doesn't come back again.\nI felt that I should mention that it is probably best to buy a cheap dedicated Linux computer,\na Raspberry PI[2] costs $140 dollars, and a monitor runs about $70.\nIt is not very fast, but web pages load OK,\nand it is a proper Linux with a proper terminal application where you can type commands.\nInstalling ffmpeg should only require running sudo apt-get install ffmpeg\nRaspberry Pi Documentation has some useful information about APT[3]\nIf the command does not work out, which doesn't really happen,\nthen you have to search for \"How to install ffmpeg on Raspberry PI\"[4] and begin your Linux adventure here.\nBut using apt is easy, and you will soon have ffmpeg on your system,\nyou'll have to copy your music onto the PI.\nAnd from now on I will refer to your favorite song as: \"original-song.mp3\",\nand the song that we will speed up will be called \"spedup-song.mp3\"\nThere are three parts to this command,\nand it all begins by saying ffmpeg to tell the system you will be using the ffmpeg program.\nThen the developers behind ffmpeg decided that you should use -i\nto tell ffmpeg of any input files so you have to say -i original-song.mp3\nThis is called giving a command an argument,\nwe are giving it the -i argument with the value of original-song.mp3.\nNext, we say -af atempo=1.25 so we are giving ffmpeg the -af argument,\nwhich is short for audio filter, and then we specify the filter which is atempo.\natempo[5] stands for \"Adjust audio tempo\" but the syntax that follows -af,\nis something that ffmpeg programmers picked to try to make things easy.\nIn this case atempo is followed by equal sign,\nwhich means assign value, and the value we are assigning is 1.25\nThis is so hard to grasp at first, because ffmpeg programmers,\nreally struggled with how to make all this somewhat readable, and useful.\n1.25 is a programmers way of saying set the tempo to 125%,\nthe math is easier this way, an everyone just does it.\nSo if you wanted to speed up your song to 150% tempo, you would say, atempo=1.50,\nand if you wanted to slow it down to 50% tempo, you would say atempo=0.50\nAt this point we just give ffmpeg the filename we want to save the changes to,\nwhich in this tutorial is spedup-song.mp3.\nSo the whole command reads like this:\nffmpeg -i original-song.mp3 -af atempo=1.25 spedup-song.mp3;\nThe biggest thing to learn from all this,\nis that programmers are trying to be useful, and they are very thrifty.\nThe operating system has no idea where or what atempo is,\nthat is just part of ffmpeg, and its own world of complexity.\nAs to the command line,\nthe command line is trying to be useful[6]\nIt is just command names and arguments,\nand developers trying to make commands useful.\nIt is faster to do things on the command line,\njust imagine how many clicks you would have to make in a Graphic User Interface application.\nAs to not knowing what the commands are,\nnobody knows them at first, you just write them down, and eventually memorize them.\n\nIn Closing,\nI will speed up one of my songs to let you hear the difference.\nHere is the original speed,\n(audio plays)\nAnd here is the version, that is sped up to 125% tempo.\n(audio plays)\nThe overall lesson to take from all this, is that command line is not scary, but it will take a Linux, and some notes to get used to it.\nand if you are ever bicycling among angry birds, bring an emergency hat.\n \nReferences\n[1]: https://www.youtube.com/watch?v=gWGiWHwmhhc\n[2]: https://www.canakit.com/raspberry-pi-4-complete-starter-kit.html\n[3]: https://www.raspberrypi.org/documentation/linux/software/apt.md\n[4]: https://www.google.com/search?q=How+to+install+ffmpeg+on+Raspberry+PI\n[5]: https://ffmpeg.org/ffmpeg-filters.html#atempo\n[6]: https://www.youtube.com/watch?v=tc4ROCJYbm0",
  "images": [],
  "links": [
    {
      "title": "A little bird swooped down and tried to carry me away",
      "url": "https://www.youtube.com/watch?v=gWGiWHwmhhc",
      "hostname": "www.youtube.com"
    },
    {
      "title": "Raspberry PI",
      "url": "https://www.canakit.com/raspberry-pi-4-complete-starter-kit.html",
      "hostname": "www.canakit.com"
    },
    {
      "title": "APT",
      "url": "https://www.raspberrypi.org/documentation/linux/software/apt.md",
      "hostname": "www.raspberrypi.org"
    },
    {
      "title": "\"How to install ffmpeg on Raspberry PI\"",
      "url": "https://www.google.com/search?q=How+to+install+ffmpeg+on+Raspberry+PI",
      "hostname": "www.google.com"
    },
    {
      "title": "atempo",
      "url": "https://ffmpeg.org/ffmpeg-filters.html#atempo",
      "hostname": "ffmpeg.org"
    },
    {
      "title": "the command line is trying to be useful",
      "url": "https://www.youtube.com/watch?v=tc4ROCJYbm0",
      "hostname": "www.youtube.com"
    }
  ]
}